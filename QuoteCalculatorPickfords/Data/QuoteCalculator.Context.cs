//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace QuoteCalculatorPickfords.Data
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class quotesEntities : DbContext
    {
        public quotesEntities()
            : base("name=quotesEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<tbl_BaggageItem> tbl_BaggageItem { get; set; }
        public virtual DbSet<tbl_City> tbl_City { get; set; }
        public virtual DbSet<tbl_Country> tbl_Country { get; set; }
        public virtual DbSet<tbl_EmailTemplate> tbl_EmailTemplate { get; set; }
        public virtual DbSet<tbl_ExcelSheetName> tbl_ExcelSheetName { get; set; }
        public virtual DbSet<tbl_InternationalRemoval> tbl_InternationalRemoval { get; set; }
        public virtual DbSet<tbl_PostCodeUK> tbl_PostCodeUK { get; set; }
        public virtual DbSet<tbl_Quote> tbl_Quote { get; set; }
        public virtual DbSet<tbl_Service> tbl_Service { get; set; }
        public virtual DbSet<tbl_Title> tbl_Title { get; set; }
        public virtual DbSet<tbl_VehicleMake> tbl_VehicleMake { get; set; }
        public virtual DbSet<tbl_VehicleModel> tbl_VehicleModel { get; set; }
        public virtual DbSet<tbl_VehicleModelList> tbl_VehicleModelList { get; set; }
        public virtual DbSet<tbl_VehicleShippingRates> tbl_VehicleShippingRates { get; set; }
        public virtual DbSet<tbl_VehicleType> tbl_VehicleType { get; set; }
        public virtual DbSet<branch> branch { get; set; }
        public virtual DbSet<branch_postcode> branch_postcode { get; set; }
        public virtual DbSet<rates_destinations> rates_destinations { get; set; }
        public virtual DbSet<tbl_Vehicle> tbl_Vehicle { get; set; }
        public virtual DbSet<EmailSettings> EmailSettings { get; set; }
        public virtual DbSet<tbl_QuickQuoteItems> tbl_QuickQuoteItems { get; set; }
        public virtual DbSet<tbl_AdditionalQuickQuoteItems> tbl_AdditionalQuickQuoteItems { get; set; }
        public virtual DbSet<uk> uk { get; set; }
        public virtual DbSet<tbl_RequestTracking> tbl_RequestTracking { get; set; }
        public virtual DbSet<tbl_BlockIpOrEmail> tbl_BlockIpOrEmail { get; set; }
        public virtual DbSet<tbl_WhiteListIp> tbl_WhiteListIp { get; set; }
        public virtual DbSet<tbl_AccessCode> tbl_AccessCode { get; set; }
        public virtual DbSet<tbl_ChildContent> tbl_ChildContent { get; set; }
        public virtual DbSet<tbl_HeadingContent> tbl_HeadingContent { get; set; }
        public virtual DbSet<tbl_QuoteType> tbl_QuoteType { get; set; }
        public virtual DbSet<tbl_TransitionTimeLine> tbl_TransitionTimeLine { get; set; }
        public virtual DbSet<bag_c2c> bag_c2c { get; set; }
        public virtual DbSet<bag_imports_uk> bag_imports_uk { get; set; }
        public virtual DbSet<matrix_c2c> matrix_c2c { get; set; }
        public virtual DbSet<sailingsched> sailingsched { get; set; }
        public virtual DbSet<tbl_QuoteAmount> tbl_QuoteAmount { get; set; }
        public virtual DbSet<tbl_RemovalQuoteCalculaition> tbl_RemovalQuoteCalculaition { get; set; }
        public virtual DbSet<tbl_SMSLog> tbl_SMSLog { get; set; }
        public virtual DbSet<tbl_OptOut> tbl_OptOut { get; set; }
        public virtual DbSet<tbl_baggageQuote> tbl_baggageQuote { get; set; }
        public virtual DbSet<tbl_FailedXML> tbl_FailedXML { get; set; }
        public virtual DbSet<source> source { get; set; }
        public virtual DbSet<cartons> cartons { get; set; }
    
        public virtual ObjectResult<GetInfoForQuote_Result> GetInfoForQuote(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetInfoForQuote_Result>("GetInfoForQuote", idParameter);
        }
    
        public virtual int GetVehicleModelDetailsById(string vehicleMake, string vehicleModel)
        {
            var vehicleMakeParameter = vehicleMake != null ?
                new ObjectParameter("VehicleMake", vehicleMake) :
                new ObjectParameter("VehicleMake", typeof(string));
    
            var vehicleModelParameter = vehicleModel != null ?
                new ObjectParameter("VehicleModel", vehicleModel) :
                new ObjectParameter("VehicleModel", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetVehicleModelDetailsById", vehicleMakeParameter, vehicleModelParameter);
        }
    
        public virtual ObjectResult<GetVehicleModelList_Result> GetVehicleModelList(string makeName)
        {
            var makeNameParameter = makeName != null ?
                new ObjectParameter("MakeName", makeName) :
                new ObjectParameter("MakeName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetVehicleModelList_Result>("GetVehicleModelList", makeNameParameter);
        }
    
        public virtual ObjectResult<SP_GetXmlData_Result> SP_GetXmlData(Nullable<int> vehicleId)
        {
            var vehicleIdParameter = vehicleId.HasValue ?
                new ObjectParameter("VehicleId", vehicleId) :
                new ObjectParameter("VehicleId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetXmlData_Result>("SP_GetXmlData", vehicleIdParameter);
        }
    
        public virtual ObjectResult<GetCity_Result> GetCity(string countryCode)
        {
            var countryCodeParameter = countryCode != null ?
                new ObjectParameter("CountryCode", countryCode) :
                new ObjectParameter("CountryCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCity_Result>("GetCity", countryCodeParameter);
        }
    
        public virtual int SP_BaggegeCalculation(Nullable<long> quoteId)
        {
            var quoteIdParameter = quoteId.HasValue ?
                new ObjectParameter("QuoteId", quoteId) :
                new ObjectParameter("QuoteId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_BaggegeCalculation", quoteIdParameter);
        }
    
        public virtual ObjectResult<SP_GetQuoteContents_Result> SP_GetQuoteContents(string countryCode, string quoteType)
        {
            var countryCodeParameter = countryCode != null ?
                new ObjectParameter("CountryCode", countryCode) :
                new ObjectParameter("CountryCode", typeof(string));
    
            var quoteTypeParameter = quoteType != null ?
                new ObjectParameter("QuoteType", quoteType) :
                new ObjectParameter("QuoteType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetQuoteContents_Result>("SP_GetQuoteContents", countryCodeParameter, quoteTypeParameter);
        }
    
        public virtual ObjectResult<SP_GetBaggageXmlData_Result> SP_GetBaggageXmlData(Nullable<int> baggageQuoteId, Nullable<int> company)
        {
            var baggageQuoteIdParameter = baggageQuoteId.HasValue ?
                new ObjectParameter("BaggageQuoteId", baggageQuoteId) :
                new ObjectParameter("BaggageQuoteId", typeof(int));
    
            var companyParameter = company.HasValue ?
                new ObjectParameter("Company", company) :
                new ObjectParameter("Company", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetBaggageXmlData_Result>("SP_GetBaggageXmlData", baggageQuoteIdParameter, companyParameter);
        }
    
        public virtual ObjectResult<sp_GetdataForEmailSending_Result> sp_GetdataForEmailSending(Nullable<int> id, Nullable<int> value, string shippingType)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var valueParameter = value.HasValue ?
                new ObjectParameter("Value", value) :
                new ObjectParameter("Value", typeof(int));
    
            var shippingTypeParameter = shippingType != null ?
                new ObjectParameter("ShippingType", shippingType) :
                new ObjectParameter("ShippingType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetdataForEmailSending_Result>("sp_GetdataForEmailSending", idParameter, valueParameter, shippingTypeParameter);
        }
    
        public virtual ObjectResult<SP_GetCollectionDelivery_Result> SP_GetCollectionDelivery(Nullable<long> quoteId, Nullable<int> company)
        {
            var quoteIdParameter = quoteId.HasValue ?
                new ObjectParameter("QuoteId", quoteId) :
                new ObjectParameter("QuoteId", typeof(long));
    
            var companyParameter = company.HasValue ?
                new ObjectParameter("Company", company) :
                new ObjectParameter("Company", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetCollectionDelivery_Result>("SP_GetCollectionDelivery", quoteIdParameter, companyParameter);
        }
    
        public virtual ObjectResult<GetCityForInternationalRemoval_Result> GetCityForInternationalRemoval(string countryCode)
        {
            var countryCodeParameter = countryCode != null ?
                new ObjectParameter("CountryCode", countryCode) :
                new ObjectParameter("CountryCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCityForInternationalRemoval_Result>("GetCityForInternationalRemoval", countryCodeParameter);
        }
    
        public virtual ObjectResult<SP_RemovalCalculation_Result> SP_RemovalCalculation(Nullable<long> quoteId)
        {
            var quoteIdParameter = quoteId.HasValue ?
                new ObjectParameter("QuoteId", quoteId) :
                new ObjectParameter("QuoteId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_RemovalCalculation_Result>("SP_RemovalCalculation", quoteIdParameter);
        }
    
        public virtual ObjectResult<SP_GetRemovalXmlData_Result> SP_GetRemovalXmlData(Nullable<long> quoteId)
        {
            var quoteIdParameter = quoteId.HasValue ?
                new ObjectParameter("QuoteId", quoteId) :
                new ObjectParameter("QuoteId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetRemovalXmlData_Result>("SP_GetRemovalXmlData", quoteIdParameter);
        }
    }
}
