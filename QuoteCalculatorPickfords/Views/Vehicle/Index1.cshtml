@*@using QuoteCalculatorPickfords.Data*@
@using QuoteCalculatorPickfords.Common
@model QuoteCalculatorPickfords.Models.VehicleModel


@*@using Kendo.Mvc.UI*@

@{
    /**/

    ViewBag.Title = "Index";

}

@*@using (Html.BeginForm("Index", "Vehicle", FormMethod.Post, new { @class = "custom-inputs", @id = "form", enctype = "multipart / form - data", }))
{*@

    @Html.AntiForgeryToken()
    <div class="page-breadcrumb text-center font-nr mb-2">
        <ul>
            <li><a href="#">Home</a></li>
            <li><a href="#">Quote</a></li>
            <li><a href="#">Vehicle shipping</a></li>
        </ul>
    </div>

    <h1 class="text-primary text-center mb-4"><b>Vehicle shipping</b></h1>
    <p><small class="text-warning">Please fill in the form below. All fields marked * are mandatory</small></p>
    <div class="row justify-content-center">
        <div class="col-md-9 my-4">
            <ul class="progress-steps">
                <li class="active">First Step</li>
                <li></li>
            </ul>
        </div>
        <form class="class=" custom-inputs">
            <div class="col-12 my-4">
                <h5 class="text-success"><b>Your details</b></h5>
            </div>
            <div class="col-12">
                <div class="row">
                    <div class="col-md-6">
                        <div class="row">
                            <div class="col-12 form-group">
                                @Html.LabelFor(m => m.Firstname)
                                @Html.TextBoxFor(m => m.Firstname, new { @class = "form-control", @required = "required", placeholder = "First Name" })
                                @Html.ValidationMessageFor(m => m.Firstname)
                                @*<label>First Name*</label>
                            <input type="text" id="Firstname" class="form-control" placeholder="Type Here" />*@
                            </div>
                            <div class="col-12 form-group">
                                <label>Last name*</label>
                                <input type="text" id="Lastname" class="form-control" placeholder="Type Here" />
                            </div>
                            @*<div class="col-12 form-group">
                            @Html.LabelFor(m => m.Firstname)
                            @(Html.Kendo().TextBoxFor(m => m.Firstname).HtmlAttributes(new { @class = "form-control", @style = "width:100%;", @TabIndex = 1, @placeholder = "Type here" }))
                            @Html.ValidationMessageFor(m => m.Firstname)
                        </div>
                        <div class="col-12 form-group">
                            @Html.LabelFor(m => m.Lastname)
                            @(Html.Kendo().TextBoxFor(m => m.Lastname).HtmlAttributes(new { @class = "form-control", @style = "width:100%;", @TabIndex = 2, @placeholder = "Type here" }))
                            @Html.ValidationMessageFor(m => m.Lastname)
                        </div>*@
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="row">
                            <div class="col-12 form-group">
                                <label>Email*</label>
                                <input type="email" id="Email" class="form-control" placeholder="Type Here" />
                                @*@Html.LabelFor(m => m.Email)
                            @(Html.Kendo().TextBoxFor(m => m.Email).HtmlAttributes(new { @class = "form-control", @style = "width:100%;", @TabIndex = 3, @placeholder = "Type here" }))
                            @Html.ValidationMessageFor(m => m.Email)*@
                            </div>
                            <div class="col-12 form-group">
                                <div class="row">
                                    <div class="col-auto small-fixed-input">
                                        @*@Html.LabelFor(m => m.TitleId)
                                    @(Html.Kendo().ComboBoxFor(m => m.TitleId)
                                                           //.Value(Model.TitleId == 0 ? string.Empty : Model.TitleId.ToString())
                                                           .DataTextField("TitleName")
                                                           .DataValueField("Id")
                                                           .DataSource(source => source.Read(read => read.Action("GetTitleList", "Common")))
                                                           .Suggest(true)
                                                           .Filter(FilterType.Contains)
                                                           .Placeholder(CommonHelper.PleaseSelect)
                                                           .HtmlAttributes(new { style = "width:100%;", @TabIndex = 4 }))
                                    @Html.ValidationMessageFor(m => m.TitleId)*@
                                    </div>
                                    <div class="col">
                                        @Html.LabelFor(m => m.Telephone)
                                        @Html.TextBoxFor(m => m.Telephone, new { @class = "form-control", @required = "required", placeholder = "User name" })
                                        @Html.ValidationMessageFor(m => m.Telephone)

                                        @*@(Html.Kendo().TextBoxFor(m => m.Telephone).HtmlAttributes(new { @class = "form-control", @style = "width:100%;", @TabIndex = 5, @placeholder = "Type here" }))
                                    @Html.ValidationMessageFor(m => m.Telephone)*@
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-12 my-4">
                <h5 class="text-success"><b>Your move</b></h5>
            </div>
            <div class="col-12">
                <div class="row">
                    <div class="col-md-6">
                        <div class="row">
                            <div class="col-12 form-group">
                                @Html.LabelFor(m => m.FromCountryId)
                                @*@(Html.Kendo().ComboBoxFor(m => m.FromCountryId)
                                                      .Value("1039")
                                                      .DataTextField("CountryName")
                                                      .DataValueField("Id")
                                                      .DataSource(source => source.Read(read => read.Action("GetCountryList", "Common")))
                                                      .Suggest(true)
                                                      .Filter(FilterType.Contains)
                                                      //.Enable(false)
                                                      .Placeholder(CommonHelper.PleaseSelect)
                                                      .HtmlAttributes(new { style = "width:100%;", @TabIndex = 6, @readonly = "readonly" }))
                            @Html.ValidationMessageFor(m => m.FromCountryId)*@
                            </div>
                            <div class="col-12 form-group">
                                @Html.LabelFor(m => m.PostCode)
                                @*@(Html.Kendo().TextBoxFor(m => m.PostCode).HtmlAttributes(new { @class = "form-control", @style = "width:100%;", @TabIndex = 7 }))
                            @Html.ValidationMessageFor(m => m.PostCode)*@
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="row">
                            <div class="col-12 form-group">
                                @Html.LabelFor(m => m.ToCountryId)
                                @*@(Html.Kendo().ComboBoxFor(m => m.ToCountryId)
                                                        .DataTextField("CountryName")
                                                        .DataValueField("Id")
                                                        .DataSource(source => source.Read(read => read.Action("GetCountryList", "Common")))
                                                        .Suggest(true)
                                                        .Filter(FilterType.Contains)
                                                        .Placeholder(CommonHelper.PleaseSelect)
                                                        .HtmlAttributes(new { style = "width:100%;", @TabIndex = 8 }))
                            @Html.ValidationMessageFor(m => m.ToCountryId)*@
                            </div>
                            <div class="col-12 form-group">
                                <label>Moving TO - City*</label>
                                @*@(Html.Kendo().ComboBoxFor(m => m.@Html.LabelFor(m => m.VehicleModelId))
                                                          .HtmlAttributes(new { style = "width:100%;", @TabIndex = 9 })
                                                          .Placeholder(CommonHelper.PleaseSelect)
                                                          .DataTextField("CityName")
                                                          .DataValueField("Id")
                                                          .Suggest(true)
                                                          .Filter(FilterType.Contains)
                                                          .DataSource(source =>
                                                                         {
                                                                             source.Read(read =>
                                                                                             {
                                                                read.Action("GetCascadingCityList", "Common")
                                                                .Data("filterCity");
                                                            })
                                                                                             .ServerFiltering(true);
                                                                         })
                                                           .Enable(false)
                                                           .AutoBind(false)
                                                           .CascadeFrom("ToCountryId")
                            )*@

                            </div>
                            <div class="col-10 col-md-8 form-group">
                                @Html.LabelFor(m => m.EstimatedMoveDate)
                                @*@(Html.Kendo().DatePickerFor(model => model.EstimatedMoveDate)
                                                                            //.Value(DateTime.Now)
                                                                            .HtmlAttributes(new { style = "width:100%;", @TabIndex = 10, @placeholder = "dd/mm/yyyy" })
                                                                            .ParseFormats(new string[] { "dd-MM-yyyy" }))
                            @Html.ValidationMessageFor(m => m.EstimatedMoveDate)*@
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-12 my-4">
                <h5 class="text-success"><b>Your vehicle</b></h5>
            </div>
            <div class="col-12">
                <div class="row">
                    <div class="col-md-6">
                        <div class="row">
                            <div class="col-12 form-group">
                                @Html.LabelFor(m => m.VehicleType)
                                @*@(Html.Kendo().ComboBoxFor(m => m.VehicleType)
                                                                                //.Value(Model.ToCountryId == 0 ? string.Empty : Model.ToCountryId.ToString())
                                                                                .DataTextField("TypeName")
                                                                                .DataValueField("Id")
                                                                                .DataSource(source => source.Read(read => read.Action("GetVehicleTypeList", "Common")))
                                                                                .Suggest(true)
                                                                                .Filter(FilterType.Contains)
                                                                                .Placeholder(CommonHelper.PleaseSelect)
                                                                                .HtmlAttributes(new { style = "width:100%;", @TabIndex = 11 }))
                            @Html.ValidationMessageFor(m => m.VehicleType)*@
                            </div>
                            <div class="col-12 form-group">
                                @Html.LabelFor(m => m.VehiclemakeId)
                                @*@(Html.Kendo().ComboBoxFor(m => m.VehiclemakeId)
                                                                               //.Value(Model.ToCountryId == 0 ? string.Empty : Model.ToCountryId.ToString())
                                                                               .DataTextField("MakeName")
                                                                               .DataValueField("Id")
                                                                               .DataSource(source => source.Read(read => read.Action("GetVehicleMakeList", "Common")))
                                                                               .Suggest(true)
                                                                               .Filter(FilterType.Contains)
                                                                               .Placeholder(CommonHelper.PleaseSelect)
                                                                               .HtmlAttributes(new { style = "width:100%;", @TabIndex = 12, @placeholder = "Type here" }))
                            @Html.ValidationMessageFor(m => m.VehiclemakeId)*@
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="row">
                            <div class="col-12 form-group mt-md-4 pt-md-3">
                                <div class="">
                                    @* @(Html.Kendo().CheckBoxFor(m => m.IsOwnedCar).HtmlAttributes(new { @tabindex = 13 }))*@
                                    <label for="privacyTermsConditions">I've owned the car for at least 1 year * <i class="bx bx-info-circle text-primary"></i></label>
                                    @*<input id="privacyTermsConditions" name="checkbox" type="checkbox">
                                <label for="privacyTermsConditions">I've owned the car for at least 1 year * <i class="bx bx-info-circle text-primary"></i></label>*@
                                </div>
                            </div>
                            <div class="col-12 form-group">
                                @*@Html.LabelFor(m => m.VehicleModelId)
                            @(Html.Kendo().ComboBoxFor(m => m.VehicleModelId)
                                                                                  //.Value(Model.ToCountryId == 0 ? string.Empty : Model.ToCountryId.ToString())
                                                                                  .DataTextField("ModelName")
                                                                                  .DataValueField("Id")
                                                                                  .DataSource(source => source.Read(read => read.Action("GetVehicleModelList", "Common")))
                                                                                  .Suggest(true)
                                                                                  .Filter(FilterType.Contains)
                                                                                  .Placeholder(CommonHelper.PleaseSelect)
                                                                                  .HtmlAttributes(new { style = "width:100%;", @TabIndex = 14, @placeholder = "Type here" }))
                            @Html.ValidationMessageFor(m => m.VehicleModelId)*@
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-12 my-4">
                <h5 class="text-success"><b>Special requirements:</b></h5>
            </div>
            <div class="col-12">
                @Html.TextAreaFor(x => x.SpecialRequirement, 2, 3, new { @tabindex = "15", @class = "form-control", @placeholder = "Your message here (max 3000 ch)" })
            </div>
            <div class="col-sm-10 col-md-8 col-lg-6 my-5">
                <div class="">
                    @*@(Html.Kendo().CheckBoxFor(m => m.IsConditionApply)
                .Name("IsConditionApply").Label("Privacy Terms & Conditions Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.").HtmlAttributes(new { style = "width:100%;", @tabindex = 16 }))*@

                </div>
            </div>
            <div class="col-12">
                <p class="mb-2"><b>Choose another option?</p>
                <ul class="option-links">
                    <li><a href="#">Book a home survey</a></li>
                    <li>|</li>
                    <li><a href="#">Book a video survey</a></li>
                    <li>|</li>
                    <li><a href="#">Baggage Only</a></li>
                </ul>
            </div>

            <div class="col-12 mt-5">
                <div class="border-top pt-4">
                    <div class="row justify-content-between">
                        <div class="col-sm-auto">
                            <button class="btn btn-secondary btn-lg rounded-pill d-flex align-items-center justify-content-center" onclick="location.href='@Url.Action("Index", "Home")'"><span class="pl-2" style="transform: rotate(180deg);">&#x27A1;</span> Back</button>
                        </div>
                        <div class="col-sm text-center">
                            <p class="mb-0 text-danger text-uppercase">Attention</p>
                            <p>No option has been selected above. Plesae select one to countinue.</p>
                        </div>
                        <div class="col-sm-auto">
                            <button type="button" class="btn btn-warning btn-lg rounded-pill d-flex align-items-center justify-content-center" onclick="onNextClick();" id="btnNext">Next <span class="pl-2">&#x27A1;</span></button>
                        </div>
                    </div>
                </div>
            </div>
            </form>
</div>
    @*  *@}

<script>
    $(document).ready(function (e) {        
        // $('form').kendoValidator();
         //e = e || window.event;
         //var key = e.keyCode;
         //if (key == 13) //Enter
         //{
         //    return true;
         //}
    //    $("#ToCountryId").data('kendoComboBox').value(@ViewBag.CountryId);
    });

    function filterCity() {
        return {
            CountryId: $("#ToCountryId").val()
        };
    }

    function tableInputKeyPress(e) {
        e = e || window.event;
        var key = e.keyCode;
        if (key == 13) //Enter
        {
            //do you task here...
            return true; //return true to submit, false to do nothing
        }
    }
       
    function onNextClick() {        
            @*$.ajax({
                    type: 'POST',
                    url: '@Url.Action("Index", "Vehicle")',
                    contentType: 'text/html',
                    success: function (result) {
                        if (result == "") {
                            $("#dvDisclaimer").html("");
                        } else {
                            $("#dvDisclaimer").html(result);
                        }
                    }
                });*@
        }


</script>