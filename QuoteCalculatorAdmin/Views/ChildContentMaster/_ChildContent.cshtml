@model QuoteCalculator.Service.Models.ContentMasterModel
@{
    //Layout = null;
}
<style>
    .k-multiselect-wrap {
        max-height: 200px !important;
        overflow-y: auto !important;
    }

    .dropdown-menu {
        max-height: 250px;
    }

        .dropdown-menu > li:hover {
            color: white;
        }
</style>
<script src="~/Scripts/Common.js"></script>

<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>

@using (Html.BeginForm(null, null, FormMethod.Post, new { @id = "ChildContentForm" }))
{
    @Html.AntiForgeryToken()
    <div class="row">
        <div class="col-sm-12">
            <div class="form-group mb-2">
                @Html.HiddenFor(m => m.ChildContentId)
                @Html.LabelFor(m => m.ChildContent)
                @Html.TextAreaFor(model => model.ChildContent, new { @class = "form-control", style = "width: 100%;", @tabindex = 1, @Name = "model.ChildContent" })
                <span class="field-validation-valid text-danger" data-valmsg-for="model.ChildContent" data-valmsg-replace="true"></span>
            </div>

            <div class="form-group mb-2">
                @Html.LabelFor(m => m.HeadingContentId)
                @Html.DropDownListFor(m => m.HeadingContentId, new SelectList((IEnumerable<SelectListItem>)ViewBag.HeadingContentList, "Value", "Text"), "-- Select Field --", new { @class = "form-control w-100", @Name = "model.HeadingContentId" })
                <span class="field-validation-valid text-danger" data-valmsg-for="model.HeadingContentId" data-valmsg-replace="true"></span>
            </div>

            <div class="form-group mb-2">
                @Html.LabelFor(m => m.CountryCode)
                <select multiple="multiple" class="selectCountry form-control selectpicker" id="CountryList" name="model.CountryList" data-selected-text-format="count > 3" title="-- Select Item --">
                    <option class="select-all-option" value="">- Select All -</option>
                    @foreach (var country in ViewBag.CountryList)
                    {
                        var isSelected = Model.CountryList.Contains(country.Value) ? "selected" : "";
                        <option value="@country.Value" @isSelected>@country.Text</option>
                    }
                </select>
                <span class="field-validation-valid text-danger d-none" id="countrylistvalidation">Please select country</span>
            </div> 

            <div class="form-group mb-2">
                @Html.LabelFor(m => m.DisplayOrder)
                @Html.TextBoxFor(model => model.DisplayOrder, new { @class = "form-control", style = "width: 100%;", @tabindex = 4, @type = "number", @Name = "model.DisplayOrder" })
                @*<span id="DisplayOrderValidation" class="text-danger d-none">Please select Display Order</span>
                    <span id="DisplayOrderRangeValidation" class="text-danger d-none">Display Order must be a non-negative number</span>*@
                <span class="field-validation-valid text-danger" data-valmsg-for="model.DisplayOrder" data-valmsg-replace="true"></span>
            </div>

            <div class="text-right pt-4">
                <input type="button" value="SAVE" class="btn btn-warning mr-2" onclick="return HeadingContentSave();" />
                <input type="button" value="CANCEL" class="btn btn-cancel" onclick="ClosePopup();" />
            </div>
        </div>
    </div>

}

<script>
    $(document).ready(function () {
        $('.selectCountry').selectpicker({
            title: '- Select Item -'
        });

        $('.selectCountry').on('changed.bs.select', function (e, clickedIndex, isSelected, previousValue) {
            if (clickedIndex === 0) {
                if (isSelected) {
                    $(this).selectpicker('selectAll');
                } else {
                    $(this).selectpicker('deselectAll');
                }
            }
            var selectpicker = $(this);
            var selectAllOption = selectpicker.find('.select-all-option');

            if (isSelected && selectpicker.find('option:not(.select-all-option):selected').length === selectpicker.find('option:not(.select-all-option)').length) {
                selectAllOption.text('Deselect All');
            } else {
                selectAllOption.text('- Select All -');
            }

            selectpicker.selectpicker('refresh');
        });
    });

    function HeadingContentSave() {
        var selectedCountries = $("#CountryList").val()
        var ChildContentId = parseInt($("#ChildContentId").val())
        var formData = $('#ChildContentForm').serializeArray();
       
        formData.push({ name: 'model.CountryList', value: selectedCountries });
        formData.push({ name: 'model.ChildContentId', value: ChildContentId });

        if ($('#ChildContentForm').valid()) {
            if (selectedCountries.length <= 0) {
                $("#countrylistvalidation").removeClass("d-none");
                return
            }
            const data = $('#ChildContentForm').serialize();
            $.ajax({
                type: 'POST',
                url: '@Url.Action("Save", "ChildContentMaster")',
                //dataType: 'json',
                data: formData,
                //cache: false,
                async: false,
                success: function (data) {
                    if (data.Message) {
                        toastr.success(data.Message);
                        $('#ChildEditDetailPopup').modal('hide');
                        BindContentList();
                        //$('#ChildContentGrid').data('kendoGrid').dataSource.read();
                    }
                },
                error: function () {
                    alert("We are facing some problem please try again later");
                }
            });
        }
        else {
            return false;
        }
        // debugger;
        //// var validator = $('#ChildContentForm').kendoValidator().data("kendoValidator");
        // if ($("#ChildContent").val() == "") {
        //     $("#ChildContent_Val").removeClass('d-none');
        //     return false;
        // }
        // else if ($("#DisplayOrder").val() == "") {
        //     $("#DisplayOrderValidation").removeClass('d-none');
        //     $("#DisplayOrderRangeValidation").addClass('d-none');
        //     return false;
        // }
        // else if ($("#DisplayOrder").val() < 1) {
        //     $("#DisplayOrderRangeValidation").removeClass('d-none');
        //     $("#DisplayOrderValidation").addClass('d-none');
        //     return false;
        // }
        // else if ($("#CountryList").val() == '') {
        //     $("#CountryValidation").removeClass('d-none');
        //     return false;
        // }
        // else if ($("#HeadingContentId").val() == "") {
        //     $("#HeadingContentId_Val").removeClass('d-none');
        //     return false;
        // }
        // else {
        //     if ($("#ChildContentForm").valid()) {

        //     }
        //     else {
        //         return false;
        //     }
        // }
        /*setTimeout(function () { $(".main-loader").css("display", "none"); }, 500);*/
    }

    function ClosePopup() {
        $('#ChildEditDetailPopup').modal('hide');
    }

   // function saveCompleted(returString) {
   //     var str = returString.Message;
   //     if (str != undefined) {
   //         ClosePopup();
   //         readKendoGrid('ChildContentGrid');
   //         ShowErrorMessage(returString.Message);
   //     }
   //     else {

   //         ClosePopup();
   //         readKendoGrid('ChildContentGrid');
   //         SucessMessage("Data Saved Sucessffully");
   //     }

   // }

    //$('#CountryList, #HeadingContentId,#ChildContent').change(function () {
    //    if ($("#ChildContent").val() == "") {
    //        $("#ChildContent_Val").removeClass('d-none');
    //        return
    //    } else {
    //        $("#ChildContent_Val").addClass('d-none');
    //    }
    //    if ($("#CountryList").val() == '') {
    //        $("#CountryValidation").removeClass('d-none');
    //        return
    //    }
    //    else {
    //        $("#CountryValidation").addClass('d-none');
    //    }
    //    if ($("#HeadingContentId").val() == "") {
    //        $("#HeadingContentId_Val").removeClass('d-none');
    //        return
    //    }
    //    else {
    //        $("#HeadingContentId_Val").addClass('d-none');
    //    }
    //});

    //function selectAll() {
    //    var state = $("#selectAll").is(':checked');
    //    var multiSelect = $("#CountryList").data("kendoMultiSelect");
    //    if (state) {
    //        var selectedValues = [];

    //        for (var i = 0; i < multiSelect.dataSource.data().length; i++) {
    //            var item = multiSelect.dataSource.data()[i];
    //            selectedValues.push(item.country_code);
    //        }
    //        multiSelect.value(selectedValues);
    //        multiSelect.trigger("change");
    //        multiSelect.close();
    //    }
    //    else {
    //        var selectedValues = [];
    //        multiSelect.value(selectedValues);
    //        multiSelect.close();
    //        multiSelect.trigger("change");
    //    }
    //}
</script>
