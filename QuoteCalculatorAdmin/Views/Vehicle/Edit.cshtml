@model QuoteCalculator.Service.Models.EditVehicleModel
@{
    ViewBag.Title = "Edit";
}

<div class="card">
    <div class="card-body">
        <div class="row px-2 align-items-center">
            <div class="col-md-6 col-12">
                <div class="panel">
                    <div class="panel-heading">
                        @if (string.IsNullOrEmpty(Model.QuoteNo) && !string.IsNullOrEmpty(Model.EnquiryNo))
                        {

                            <h4 class="d-flex align-items-center card-title mb-0">
                                <i class="icon-info22 position-left icon-set"></i>
                                Enquiry No : @Model.EnquiryNo
                            </h4>
                        }
                        else
                        {
                            <h4  class="d-flex align-items-center card-title mb-0">
                                <i class="icon-info22 position-left icon-set"></i>
                                Quote No : @Model.QuoteNo
                            </h4>
                        }
                    </div>
                </div>
            </div>
            <div class="col-md-6 text-right">
                <a href="@Url.Action("Index", "Vehicle")" class="btn btn-cancel">Back</a>
            </div>
        </div>


        <div class="row">
            <div class="col-md-12 col-lg-12 col-xs-12 col-sm-12">
                <div class="panel panel-white bg-white p-4 m-2">
                    <div class="panel-heading">
                        <h6 class="panel-title">
                            <i class="icon-user position-left icon-set"></i> <b class="text-bold pt-0" style="text-transform:uppercase;">Personal Details</b>
                        </h6>
                    </div>
                    <div class="panel-body">
                        @Html.HiddenFor(m => m.Id)
                        <div class="row">
                            <div class="col-lg-4 col-md-4 col-xs-12 col-sm-6 form-group">
                                @Html.LabelFor(m => m.TitleId)
                                @Html.DropDownListFor(x => x.TitleId, ViewBag.TitleList as SelectList, "--Select Title--", new { @class = "form-control", @tabIndex = 1 })
                                @*@(Html.Kendo().ComboBoxFor(m => m.TitleId)
                                                          .Value(Model.TitleId == 0 ? string.Empty : Model.TitleId.ToString())
                                                          .DataTextField("TitleName")
                                                          .DataValueField("TitleId")
                                                          .DataSource(source => source.Read(read => read.Action("GetTitleList", "Common")))
                                                          .Suggest(true)
                                                          .Filter(FilterType.Contains)
                                                          .HtmlAttributes(new { @style = "width:100%;", @tabIndex = 1, @data_value_primitive = "true" })
                                                          .Placeholder(CommonHelper.PleaseSelect)
                                    )*@
                                @Html.ValidationMessageFor(m => m.TitleId)
                            </div>

                            <div class="col-lg-4 col-md-4 col-xs-12 col-sm-6 form-group">
                                @Html.LabelFor(m => m.Firstname)
                                @Html.TextBoxFor(x => x.Firstname, new { @class = "form-control", @spellcheck = "true", @tabIndex = 2 })
                                @*@(Html.Kendo().TextBoxFor(m => m.Firstname).HtmlAttributes(new { style = "width:100%;", @tabIndex = 2 }))*@
                                @Html.ValidationMessageFor(m => m.Firstname)
                            </div>

                            <div class="col-lg-4 col-md-4 col-xs-12 col-sm-6 form-group">
                                @Html.LabelFor(m => m.Lastname)
                                @Html.TextBoxFor(x => x.Lastname, new { @class = "form-control", @spellcheck = "true", @tabIndex = 3 })
                                @*  @(Html.Kendo().TextBoxFor(m => m.Lastname).HtmlAttributes(new { style = "width:100%;", @tabIndex = 3 }))*@
                                @Html.ValidationMessageFor(m => m.Lastname)
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-lg-4 col-md-4 col-xs-12 col-sm-6 form-group">
                                @Html.LabelFor(m => m.Email)
                                @Html.TextBoxFor(x => x.Email, new { @class = "form-control", @spellcheck = "true", @tabIndex = 4 })
                                @*@(Html.Kendo().TextBoxFor(m => m.Email).HtmlAttributes(new { style = "width:100%;", @tabIndex = 4 }))*@
                                @Html.ValidationMessageFor(m => m.Email)
                            </div>

                            <div class="col-lg-4 col-md-4 col-xs-12 col-sm-6 form-group">
                                @Html.LabelFor(m => m.CountryCode)
                                @Html.TextBoxFor(x => x.CountryCode, new { @class = "form-control", @spellcheck = "true", @tabIndex = 5 })
                                @*@(Html.Kendo().TextBoxFor(m => m.CountryCode).HtmlAttributes(new { style = "width:100%;", @tabIndex = 5 }))*@
                                @Html.ValidationMessageFor(m => m.CountryCode)
                            </div>

                            <div class="col-lg-4 col-md-4 col-xs-12 col-sm-6 form-group">
                                @Html.LabelFor(m => m.Telephone)
                                @Html.TextBoxFor(x => x.Telephone, new { @class = "form-control", @spellcheck = "true", @tabIndex = 6, @maxlength = "20", @onkeypress = "return isNumberKey(event)" })
                                @*  @(Html.Kendo().TextBoxFor(m => m.Telephone).HtmlAttributes(new { style = "width:100%;", @tabIndex = 6, @maxlength = "20", @onkeypress = "return isNumberKey(event)" }))*@
                                @Html.ValidationMessageFor(m => m.Telephone)
                            </div>
                        </div>
                    </div>
                </div>

                <div class="panel panel-white bg-white p-4 m-2">
                    <div class="panel-heading">
                        <h6 class="panel-title">
                            <i class="icon-book position-left icon-set"></i> <b class="text-bold pt-0" style="text-transform:uppercase;">Move Details</b>
                        </h6>
                    </div>
                    <div class="panel-body">
                        <div class="row">
                            <div class="col-lg-4 col-md-4 col-xs-12 col-sm-6 form-group">
                                @Html.LabelFor(m => m.FromCountryName)
                                @Html.TextBoxFor(x => x.FromCountryName, new { @class = "form-control", @spellcheck = "true", @tabIndex = 7 })
                                @*   @(Html.Kendo().TextBoxFor(m => m.FromCountryName).HtmlAttributes(new { style = "width:100%;", @tabIndex = 7 }))*@
                                @Html.ValidationMessageFor(m => m.FromCountryName)
                            </div>

                            @*<div class="col-lg-4 col-md-4 col-xs-12 col-sm-6 form-group">
                                @Html.LabelFor(m => m.ToCountryCode)
                                @(Html.Kendo().TextBoxFor(m => m.ToCountryCode).HtmlAttributes(new { style = "width:100%;", @tabIndex = 8 }))
                                @Html.ValidationMessageFor(m => m.ToCountryCode)
                                </div>*@
                            <div class="col-lg-4 col-md-4 col-xs-12 col-sm-6 form-group">
                                @Html.LabelFor(m => m.CityName)
                                @Html.TextBoxFor(x => x.CityName, new { @class = "form-control", @spellcheck = "true", @tabIndex = 10 })
                                @* @(Html.Kendo().TextBoxFor(m => m.CityName).HtmlAttributes(new { style = "width:100%;", @tabIndex = 10 }))*@
                                @Html.ValidationMessageFor(m => m.CityName)
                            </div>
                            <div class="col-lg-4 col-md-4 col-xs-12 col-sm-6 form-group">
                                @Html.LabelFor(m => m.PostCode)
                                @Html.TextBoxFor(x => x.PostCode, new { @class = "form-control", @spellcheck = "true", @tabIndex = 9 })
                                @*@(Html.Kendo().TextBoxFor(m => m.PostCode).HtmlAttributes(new { style = "width:100%;", @tabIndex = 9 }))*@
                                @Html.ValidationMessageFor(m => m.PostCode)
                            </div>
                        </div>

                        <div class="row">


                            <div class="col-lg-4 col-md-4 col-xs-12 col-sm-6 form-group">
                                @Html.LabelFor(m => m.EstimatedMoveDate)
                                @Html.TextBoxFor(x => x.EstimatedMoveDate, "{0:yyyy-MM-dd}", new { @class = "form-control", @type = "date", @tabIndex = 11 })
                                @*@(Html.Kendo().DatePickerFor(m => m.EstimatedMoveDate)
                                                          .HtmlAttributes(new { @style = "width: 100%", @TabIndex = 11 })
                                                          .ParseFormats(new string[] { "dd-MM-yyyy" })
                                    )*@
                                @Html.ValidationMessageFor(m => m.EstimatedMoveDate)
                            </div>

                            <div class="col-lg-4 col-md-4 col-xs-12 col-sm-6 form-group">
                                @Html.LabelFor(m => m.BranchId)
                                @Html.DropDownListFor(x => x.BranchId, ViewBag.BranchList as SelectList, "--Select Branch--", new { @class = "form-control", @tabIndex = 12 })
                                @*@(Html.Kendo().ComboBoxFor(m => m.BranchId)
                                                                          .Value(Model.BranchId == 0 ? string.Empty : Model.BranchId.ToString())
                                                                          .DataTextField("br_branch")
                                                                          .DataValueField("br_id")
                                                                          .DataSource(source => source.Read(read => read.Action("GetBranchList", "Common")))
                                                                          .Suggest(true)
                                                                          .Filter(FilterType.Contains)
                                                                          .HtmlAttributes(new { @style = "width:100%;", @tabIndex = 12, @data_value_primitive = "true" })
                                                                          .Placeholder(CommonHelper.PleaseSelect)
                                    )*@
                                @Html.ValidationMessageFor(m => m.BranchId)
                            </div>
                        </div>
                    </div>
                </div>

                <div class="panel panel-white bg-white p-4 m-2">
                    <div class="panel-heading">
                        <h6 class="panel-title">
                            <i class="icon-truck position-left icon-set"></i> <b class="text-bold pt-0" style="text-transform:uppercase;">Vehicle Details</b>
                        </h6>
                    </div>
                    <div class="panel-body">
                        <div class="row">
                            <div class="col-lg-4 col-md-4 col-xs-12 col-sm-6 form-group">
                                @Html.LabelFor(m => m.VehicleType)
                                @Html.DropDownListFor(x => x.VehicleType, ViewBag.VehicleTypeList as SelectList, "--Select Branch--" , new { @class = "form-control", @tabIndex = 13 })
                                @*@(Html.Kendo().ComboBoxFor(m => m.VehicleType)
                                                          .Value(Model.VehicleType == 0 ? string.Empty : Model.VehicleType.ToString())
                                                          .DataTextField("TypeName")
                                                          .DataValueField("Id")
                                                          .DataSource(source => source.Read(read => read.Action("GetVehicleTypeList", "Common")))
                                                          .Suggest(true)
                                                          .Filter(FilterType.Contains)
                                                          .HtmlAttributes(new { @style = "width:100%;", @tabIndex = 13, @data_value_primitive = "true" })
                                                          .Placeholder(CommonHelper.PleaseSelect)
                                    )*@
                                @Html.ValidationMessageFor(m => m.VehicleType)
                            </div>

                            <div class="col-lg-4 col-md-4 col-xs-12 col-sm-6 form-group">
                                @Html.LabelFor(m => m.VehicleMakeName)
                                @Html.TextBoxFor(x => x.VehicleMakeName, new { @class = "form-control", @spellcheck = "true", @tabIndex = 14 })
                                @*  @(Html.Kendo().TextBoxFor(m => m.VehicleMakeName).HtmlAttributes(new { style = "width:100%;", @tabIndex = 14 }))*@
                                @Html.ValidationMessageFor(m => m.VehicleMakeName)
                            </div>

                            <div class="col-lg-4 col-md-4 col-xs-12 col-sm-6 form-group">
                                @Html.LabelFor(m => m.VehicleModelName)
                                @Html.TextBoxFor(x => x.VehicleModelName, new { @class = "form-control", @spellcheck = "true", @tabIndex = 15 })
                                @*   @(Html.Kendo().TextBoxFor(m => m.VehicleModelName).HtmlAttributes(new { style = "width:100%;", @tabIndex = 15 }))*@
                                @Html.ValidationMessageFor(m => m.VehicleModelName)
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-lg-4 col-md-4 col-xs-12 col-sm-6 form-group">
                                @Html.LabelFor(m => m.SpecialRequirement)
                                @Html.TextAreaFor(x => x.SpecialRequirement, new { @class = "form-control", @spellcheck = "true", @tabIndex = 17 })
                                @*@(Html.TextAreaFor(x => x.SpecialRequirement, 4, 5, new { style = "width:100%;", @tabindex = "17", @class = "k-textbox" }))*@
                                @Html.ValidationMessageFor(m => m.SpecialRequirement)
                            </div>
                            <div class="col-lg-4 col-md-4 col-xs-12 col-sm-6 form-group  mt-15">
                                @Html.LabelFor(m => m.IsOwnedCar)
                                <label class="custom-checkbox ml-0">
                                    @Html.CheckBoxFor(x => x.IsOwnedCar, new { @class = "mr-5 form-check-input", @spellcheck = "true", @tabIndex = 16 })
                                    <span class="checkmark"></span>
                                </label>
                                @Html.ValidationMessageFor(m => m.IsOwnedCar)
                            </div>
                        </div>
                    </div>
                </div>

                <div class="panel panel-white  bg-white p-4 m-2">
                    <div class="panel-heading">
                        <h6 class="panel-title">
                            <i class="icon-bubble-lines4 position-left icon-set"></i> <b class="text-bold pt-0" style="text-transform:uppercase;">Quote Details</b>
                        </h6>
                    </div>
                    <div class="panel-body">
                        <div class="row">
                            <div class="col-lg-4 col-md-4 col-xs-12 col-sm-6 form-group mt-15">
                                @Html.LabelFor(m => m.IsFCL)
                                @if (Model.IsFCL == null)
                                {
                                    Model.IsFCL = false;
                                }
                                <label class="custom-checkbox ml-0">
                                    @Html.CheckBoxFor(model => model.IsFCL.Value, new { @class = "mr-5", @spellcheck = "true", @tabIndex = 18 })
                                    <span class="checkmark"></span>
                                </label>
                                @* @(Html.Kendo().CheckBoxFor(m => m.IsFCL).Label(" ").HtmlAttributes(new { style = "width:100%;", @tabIndex = 18 }))*@
                                @Html.ValidationMessageFor(m => m.IsFCL)
                            </div>

                            <div class="col-lg-4 col-md-4 col-xs-12 col-sm-6 form-group">
                                @Html.LabelFor(m => m.FCL)
                                @Html.TextBoxFor(x => x.FCL, new { @Type = "number", @class = "form-control", @spellcheck = "true", @tabIndex = 19 })
                                @*@(Html.Kendo().NumericTextBoxFor(m => m.FCL).Spinners(false).HtmlAttributes(new { style = "width:100%;", @tabIndex = 19 }))*@
                                @Html.ValidationMessageFor(m => m.FCL)
                            </div>

                            <div class="col-lg-4 col-md-4 col-xs-12 col-sm-6 form-group">
                                @Html.LabelFor(m => m.Volume_FCL)

                                @Html.TextBoxFor(x => x.Volume_FCL, new { @Type = "number", @class = "form-control", @spellcheck = "true", @tabIndex = 20 })
                                @* @(Html.Kendo().NumericTextBoxFor(m => m.Volume_FCL).Spinners(false).HtmlAttributes(new { style = "width:100%;", @tabIndex = 20 }))*@
                                @Html.ValidationMessageFor(m => m.Volume_FCL)
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-lg-4 col-md-4 col-xs-12 col-sm-6 form-group mt-15">
                                @Html.LabelFor(m => m.IsGRP)
                                @if (Model.IsGRP == null)
                                {
                                    Model.IsGRP = false;
                                }
                                <label class="custom-checkbox ml-0">
                                    @Html.CheckBoxFor(model => model.IsGRP.Value, new { @class = "mr-5", @spellcheck = "true", @tabIndex = 18 })
                                    <span class="checkmark"></span>
                                </label>
                                @* @(Html.Kendo().CheckBoxFor(m => m.IsGRP).Label(" ").HtmlAttributes(new { style = "width:100%;", @tabIndex = 21 }))*@
                                @Html.ValidationMessageFor(m => m.IsGRP)
                            </div>

                            <div class="col-lg-4 col-md-4 col-xs-12 col-sm-6 form-group">
                                @Html.LabelFor(m => m.GPG)
                                @Html.TextBoxFor(x => x.GPG, new { @Type = "number", @class = "form-control", @spellcheck = "true", @tabIndex = 22 })
                                @* @(Html.Kendo().NumericTextBoxFor(m => m.GPG).Spinners(false).HtmlAttributes(new { style = "width:100%;", @tabIndex = 22 }))*@
                                @Html.ValidationMessageFor(m => m.GPG)
                            </div>

                            <div class="col-lg-4 col-md-4 col-xs-12 col-sm-6 form-group">
                                @Html.LabelFor(m => m.Volume_GRP)
                                @Html.TextBoxFor(x => x.Volume_GRP, new { @Type = "number", @class = "form-control", @spellcheck = "true", @tabIndex = 23 })
                                @*@(Html.Kendo().NumericTextBoxFor(m => m.Volume_GRP).Spinners(false).HtmlAttributes(new { style = "width:100%;", @tabIndex = 23 }))*@
                                @Html.ValidationMessageFor(m => m.Volume_GRP)
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

    </div>
</div>


<script>
    $(document).ready(function () {
        $("#menu_Vehicle").addClass("active");
        $("#menu_QuoteDetails").children().removeClass("collapsed");
        $("#menu_QuoteDetails").children().addClass("show");
        $("#menu_QuoteDetails").addClass("active");
    });
    function isNumberKey(evt) {
        var charCode = (evt.which) ? evt.which : event.keyCode
        if (charCode > 32 && (charCode < 48 || charCode > 57))
            //if (charCode != 40 && charCode != 41) {
            return false;
        //}
        return true;
    }
</script>