@model QuoteCalculator.Service.Models.BaggageModel
@using System.Web.Configuration

@{
    ViewBag.Title = "Edit";
}
<style>
    .cartonimg {
        min-height: 83px;
    }
    .cartonheader{
        max-height:80px;
    }
    .pnlrightheading {
        float: right;
        text-transform: none;
        font-weight: normal;
        margin-right: 15px
    }

    #QuoteDetailPopup .modal-dialog {
        min-width: 650px;
    }

    .headingcolor {
        background-color: lightgray;
    }
</style>
<link href="~/Content/css/boxicons.min.css" rel="stylesheet" />

@using (Html.BeginForm("AddEdit", "Baggage", FormMethod.Post, new { @class = "form-horizontal", @id = "baggageQuoteForm" }))
{

    <div class="row">
        <div class="col-sm-12">
            <div class="card">
                <div class="card-header d-flex justify-content-between align-items-center" style="gap:15px">
                    <h4 class="card-title mb-0 d-flex align-items-center">
                        <i class="icon-info22 position-left icon-set"></i> Baggage Quote Details
                    </h4>
                    <div class="d-flex align-items-center" style="gap:10px">
                        @if (Model.baggageQuote != null)
                        {
                            if (Model.baggageQuote.Id > 0)
                            {
                                <p hidden id="localhost">@WebConfigurationManager.AppSettings["QuoteLocalHost"]</p>
                                <button class="btn btn-warning" type="button" onclick="ShowQuoteData()">Customer Quote</button>
                            }
                        }
                        <button class="btn btn-warning" type="button" onclick="OpenQuoteDetailsWindow()">Quick Quote</button>
                    </div>
                </div>
                <div class="card-body">
                    <div class="panel panel-white bg-white p-4 mb-2">
                        <h6 class="panel-title">
                            <i class="icon-truck position-left icon-set"></i> <b class="text-bold pt-0" style="text-transform:uppercase;">Move Details</b>
                        </h6>
                        <div class="row">
                            <div class="col-lg-4 col-md-4 col-xs-12 col-sm-6 form-group">
                                @Html.LabelFor(m => m.baggageQuote.FromCountry)
                                @Html.DropDownListFor(x => x.baggageQuote.FromCountry, ViewBag.CountryList as SelectList, "--Select Field--", new { @class = "form-control", @tabIndex = 7, @Name = "model.baggageQuote.FromCountry" })
                                <span class="field-validation-valid text-danger" data-valmsg-for="model.baggageQuote.FromCountry" data-valmsg-replace="true"></span>

                                @* @Html.ValidationMessageFor(m => m.baggageQuote.FromCountry, "", new { @class = "text-danger" })*@
                            </div>
                            <div class="col-lg-4 col-md-4 col-xs-12 col-sm-6 form-group" id="FromCityDiv">
                                @Html.LabelFor(m => m.baggageQuote.FromCity)
                                @Html.DropDownListFor(m => m.baggageQuote.FromCity, new List<SelectListItem>(), "-- Select Field --", new { @class = "form-control", @tabIndex = 8, @Name = "model.baggageQuote.FromCity" })
                                <span class="field-validation-valid text-danger" data-valmsg-for="model.baggageQuote.FromCity" data-valmsg-replace="true"></span>

                                @* @Html.ValidationMessageFor(m => m.baggageQuote.FromCity)*@
                            </div>
                            <div class="col-lg-4 col-md-4 col-xs-12 col-sm-6 form-group" id="FromPostCodeDiv">
                                @Html.LabelFor(m => m.baggageQuote.PostCode)
                                @Html.TextBoxFor(m => m.baggageQuote.PostCode, new { @class = "form-control", @tabIndex = 9, @Name = "model.baggageQuote.PostCode", @onchange = "ValidatePostcode()" })
                                <span class="field-validation-valid text-danger" data-valmsg-for="model.baggageQuote.PostCode" data-valmsg-replace="true"></span>
                                @* @(Html.Kendo().TextBoxFor(m => m.baggageQuote.PostCode).Name("model.baggageQuote.PostCode").HtmlAttributes(new { @onchange = "CheckValidPostCode()", style = "width:100%;", @tabIndex = 9 }))*@
                                @*@Html.ValidationMessageFor(m => m.baggageQuote.PostCode, "", new { @class = "text-danger" })*@
                                <span id="model_baggageQuote_PostCode_error" class="text-danger"></span>
                            </div>
                            <div class="col-lg-4 col-md-4 col-xs-12 col-sm-6 form-group">
                                @Html.LabelFor(m => m.baggageQuote.EstimatedMoveDate)
                                @Html.TextBoxFor(m => m.baggageQuote.EstimatedMoveDate, "{0:yyyy-MM-dd}", new { @type = "date", @class = "form-control", @tabIndex = 10, @Name = "model.baggageQuote.EstimatedMoveDate" })
                                <span class="field-validation-valid text-danger" data-valmsg-for="model.baggageQuote.EstimatedMoveDate" data-valmsg-replace="true"></span>
                                @*    @Html.ValidationMessageFor(m => m.baggageQuote.EstimatedMoveDate, "", new { @class = "text-danger" })*@
                            </div>
                            <div class="clearfix"></div>
                            <div class="col-lg-4 col-md-4 col-xs-12 col-sm-6 form-group">
                                @Html.LabelFor(m => m.baggageQuote.ToCountry)
                                @Html.DropDownListFor(x => x.baggageQuote.ToCountry, ViewBag.CountryList as SelectList, "--Select Field--", new { @class = "form-control", @tabIndex = 11, @Name = "model.baggageQuote.ToCountry" })
                                <span class="field-validation-valid text-danger" data-valmsg-for="model.baggageQuote.ToCountry" data-valmsg-replace="true"></span>
                                @*  @Html.ValidationMessageFor(m => m.baggageQuote.ToCountry, "", new { @class = "text-danger" })*@
                            </div>
                            <div class="col-lg-4 col-md-4 col-xs-12 col-sm-6 form-group" id="ToCityDiv">
                                @Html.LabelFor(m => m.baggageQuote.CityName)
                                @Html.DropDownListFor(m => m.baggageQuote.CityName, new List<SelectListItem>(), "-- Select Field --", new { @class = "form-control", @tabIndex = 12, @Name = "model.baggageQuote.CityName" })
                                <span class="field-validation-valid text-danger" data-valmsg-for="model.baggageQuote.CityName" data-valmsg-replace="true"></span>
                                @*   @Html.ValidationMessageFor(m => m.baggageQuote.CityName)*@
                            </div>
                            <div class="col-lg-4 col-md-4 col-xs-12 col-sm-6 form-group" id="ToPostCodeDiv">
                                @Html.LabelFor(m => m.baggageQuote.ToPostCode)
                                @Html.TextBoxFor(m => m.baggageQuote.ToPostCode, new { @onchange = "CheckValidPostCode()", @class = "form-control", @Name = "model.baggageQuote.ToPostCode", @tabIndex = 13 })
                                <span class="field-validation-valid text-danger" data-valmsg-for="model.baggageQuote.ToPostCode" data-valmsg-replace="true"></span>
                                @*   @(Html.Kendo().TextBoxFor(m => m.baggageQuote.ToPostCode).Name("model.baggageQuote.ToPostCode").HtmlAttributes(new { @onchange = "CheckValidPostCode()", style = "width:100%;", @tabIndex = 12 }))*@
                                @*  @Html.ValidationMessageFor(m => m.baggageQuote.ToPostCode, "", new { @class = "text-danger" })*@
                                <span id="model_baggageQuote_ToPostCode_error" class="text-danger"></span>
                            </div>
                        </div>
                    </div>
                    <div class="panel panel-white bg-white p-4 mb-2">
                        <h6 class="panel-title">
                            <i class="icon-user position-left icon-set"></i> <b class="text-bold pt-0" style="text-transform:uppercase;">Personal Details</b>
                        </h6>
                        <div class="row">
                            @Html.HiddenFor(m => m.baggageQuote.BranchId)
                            @Html.HiddenFor(m => m.baggageQuote.Id, new { @id = "model_baggageQuote_Id", @Name = "model.baggageQuote.Id" })
                            @Html.HiddenFor(m => m.baggageQuote.IsInquiry)
                            @Html.HiddenFor(m => m.baggageQuote.ReferenceNumber)
                            <div class="col-lg-4 col-md-4 col-xs-12 col-sm-6 form-group">
                                @Html.LabelFor(m => m.baggageQuote.TitleId)
                                @Html.DropDownListFor(x => x.baggageQuote.TitleId, ViewBag.TitleList as SelectList, "--Select Title--", new { @class = "form-control", @Name = "model.baggageQuote.TitleId", @tabIndex = 1 })
                                <span class="field-validation-valid text-danger" data-valmsg-for="model.baggageQuote.TitleId" data-valmsg-replace="true"></span>
                            </div>
                            <div class="col-lg-4 col-md-4 col-xs-12 col-sm-6 form-group">
                                @Html.LabelFor(m => m.baggageQuote.Firstname)
                                @Html.TextBoxFor(m => m.baggageQuote.Firstname, new { @class = "form-control", @Name = "model.baggageQuote.Firstname", @tabIndex = 2 })
                                <span class="field-validation-valid text-danger" data-valmsg-for="model.baggageQuote.Firstname" data-valmsg-replace="true"></span>

                            </div>
                            <div class="col-lg-4 col-md-4 col-xs-12 col-sm-6 form-group">
                                @Html.LabelFor(m => m.baggageQuote.Lastname)
                                @Html.TextBoxFor(m => m.baggageQuote.Lastname, new { @class = "form-control", @Name = "model.baggageQuote.Lastname", @tabIndex = 3 })
                                <span class="field-validation-valid text-danger" data-valmsg-for="model.baggageQuote.Lastname" data-valmsg-replace="true"></span>
                                @*@Html.ValidationMessageFor(m => m.baggageQuote.Lastname, "", new { @class = "text-danger" })*@
                            </div>

                            <div class="clearfix"></div>
                            <div class="col-lg-4 col-md-4 col-xs-12 col-sm-6 form-group">
                                @Html.LabelFor(m => m.baggageQuote.Email)
                                @Html.TextBoxFor(m => m.baggageQuote.Email, new { @class = "form-control", @Name = "model.baggageQuote.Email", @tabIndex = 4, @type = "email", @data_email_msg = "Email format is not valid" })
                                <span class="field-validation-valid text-danger" data-valmsg-for="model.baggageQuote.Email" data-valmsg-replace="true"></span>
                                @* @(Html.Kendo().TextBoxFor(m => m.baggageQuote.Email).Name("model.baggageQuote.Email").HtmlAttributes(new { style = "width:100%;", @tabIndex = 4, type = "email", data_email_msg = "Email format is not valid" }))*@
                                @*  @Html.ValidationMessageFor(m => m.baggageQuote.Email, "", new { @class = "text-danger" })*@
                            </div>
                            <div class="col-lg-4 col-md-4 col-xs-12 col-sm-6 form-group">
                                @Html.LabelFor(m => m.baggageQuote.CountryCode)
                                @Html.DropDownListFor(x => x.baggageQuote.CountryCode, ViewBag.CountryCodeList as SelectList, "--Select Field--", new { @class = "form-control", @tabIndex = 5, @Name = "model.baggageQuote.CountryCode" })
                                <span class="field-validation-valid text-danger" data-valmsg-for="model.baggageQuote.CountryCode" data-valmsg-replace="true"></span>
                                @*       @Html.ValidationMessageFor(m => m.baggageQuote.CountryCode, "", new { @class = "text-danger" })*@
                            </div>
                            <div class="col-lg-4 col-md-4 col-xs-12 col-sm-6 form-group">
                                @Html.LabelFor(m => m.baggageQuote.Telephone)
                                @Html.TextBoxFor(m => m.baggageQuote.Telephone, new { @class = "form-control", @Name = "model.baggageQuote.Telephone", @tabIndex = 6, @maxlength = "20", @onkeypress = "return isNumberKey(event)" })
                                <span class="field-validation-valid text-danger" data-valmsg-for="model.baggageQuote.Telephone" data-valmsg-replace="true"></span>
                                @* @(Html.Kendo().TextBoxFor(m => m.baggageQuote.Telephone).Name("model.baggageQuote.Telephone").HtmlAttributes(new { style = "width:100%;", @tabIndex = 6, @maxlength = "20", @onkeypress = "return isNumberKey(event)" }))*@
                                @*  @Html.ValidationMessageFor(m => m.baggageQuote.Telephone, "", new { @class = "text-danger" })*@
                            </div>
                            <div class="clearfix"></div>
                            <div class="col-lg-4 col-md-4 col-xs-12 col-sm-6 form-group">
                                @Html.LabelFor(m => m.baggageQuote.SalesRep)
                                @Html.DropDownListFor(x => x.baggageQuote.SalesRep, ViewBag.SalesRepCodeList as SelectList, "--Select Field--", new { @class = "form-control", @tabIndex = 4, @Name = "model.baggageQuote.SalesRep" })
                                @*<span class="field-validation-valid text-danger" data-valmsg-for="model.baggageQuote.SalesRep" data-valmsg-replace="true"></span>*@
                                @* @Html.ValidationMessageFor(m => m.baggageQuote.SalesRep, "", new { @class = "text-danger" })*@
                            </div>
                            <div class="col-lg-4 col-md-4 col-xs-12 col-sm-6 form-group">
                                @Html.LabelFor(m => m.baggageQuote.InternalNotes)
                                @Html.TextAreaFor(m => m.baggageQuote.InternalNotes, new { @class = "form-control", @Name = "model.baggageQuote.InternalNotes", style = "width: 100%;", @tabindex = 3 })
                                <span class="field-validation-valid text-danger" data-valmsg-for="model.baggageQuote.InternalNotes" data-valmsg-replace="true"></span>
                                @* @Html.ValidationMessageFor(m => m.baggageQuote.InternalNotes, "", new { @class = "text-danger" })*@
                            </div>

                        </div>
                    </div>
                    <div class="panel panel-white bg-white p-4 mb-2">
                        <div class="panel-title d-flex align-items-center justify-content-between">
                            <div class="d-flex align-items-center">
                                <i class="icon-bubble-lines4 position-left icon-set"></i> <b class="text-bold pt-0" style="text-transform:uppercase;">Items Details</b>
                                <button type="button" class="btn btn-warning ml-3" onclick="ClearInventory()">Clear Inventory<i class=""></i></button>
                            </div>
                            <div class="text-success d-flex align-items-center">
                                <span id="totalQuantity"></span> &nbsp;
                                <span id="totalUserVolume"></span>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-sm-12">
                                <h2 class="headingcolor rounded mb-0" id="headingOne">
                                    <button type="button" class="btn btn-block accordionbtn-collapsed text-left" data-toggle="collapse" data-target="#collapseOne" aria-expanded="false"
                                            aria-controls="collapseOne">
                                        <span>1 </span>Choose your cartons<i class=""></i>
                                        <span id="totalUserVolume_heading1" class="text-success pnlrightheading">
                                        </span>
                                        <span id="totalQuantity_heading1" class="text-success pnlrightheading">
                                        </span>
                                    </button>

                                </h2>
                                <div id="collapseOne" class="collapse opendiv" @*aria-labelledby="headingOne" data-parent="#moveJourneyAccordian"*@>
                                    @if (Model.cartonList != null)
                                    {
                                        <div class="p-2">
                                            <div class="row">
                                                @for (int i = 0; i < Model.cartonList.Count; i++)
                                                {
                                                    <input type="hidden" id="model.cartonList[@i].type" name="model.cartonList[@i].type" value="@Model.cartonList[i].type">
                                                    <input type="hidden" id="model.cartonList[@i].id" name="model.cartonList[@i].id" value="@Model.cartonList[i].id">
                                                    <input type="hidden" id="model.cartonList[@i].display" name="model.cartonList[@i].display" value="@Model.cartonList[i].display">
                                                    <input type="hidden" id="model.cartonList[@i].description" name="model.cartonList[@i].description" value="@Model.cartonList[i].description">
                                                    <input type="hidden" id="model.cartonList[@i].length" name="model.cartonList[@i].length" value="@Model.cartonList[i].length">
                                                    <input type="hidden" id="model.cartonList[@i].breadth" name="model.cartonList[@i].breadth" value="@Model.cartonList[i].breadth">
                                                    <input type="hidden" id="model.cartonList[@i].height" name="model.cartonList[@i].height" value="@Model.cartonList[i].height">
                                                    <input type="hidden" id="model.cartonList[@i].volume" name="model.cartonList[@i].volume" value="@Model.cartonList[i].volume">
                                                    <input type="hidden" id="model.cartonList[@i].image" name="model.cartonList[@i].image" value="@Model.cartonList[i].image">
                                                    <input type="hidden" id="model.cartonList[@i].weight" name="model.cartonList[@i].weight" value="@Model.cartonList[i].weight">
                                                    <input type="hidden" id="model.cartonList[@i].standout" name="model.cartonList[@i].standout" value="@Model.cartonList[i].standout">
                                                    <input type="hidden" id="model.cartonList[@i].moveware_description" name="model.cartonList[@i].moveware_description" value="@Model.cartonList[i].moveware_description">
                                                    <input type="hidden" id="model.moveList[@i].Volume" name="model.moveList[@i].Volume" value="@Model.moveList[i].Volume">
                                                    if (Model.cartonList[i].type == "MAIN" && Model.cartonList[i].display == 1)
                                                    {
                                                        <div class="col-12 col-lg-2 col-md-4 mb-2">
                                                            <div class="border text-center p-4 rounded">
                                                                <p><span class="mb-5 h6 mt-0 " id="cartonList_Volume_@i">@Model.cartonList[i].volume</span> cu ft </p>
                                                                <p>@Model.cartonList[i].description</p>
                                                                <div class="carton-image cartonimg">
                                                                    <img src="~/@Model.cartonList[i].image" alt="img" />
                                                                </div>
                                                                <p class="mb-0 mt-10"><b>@Model.cartonList[i].length X @Model.cartonList[i].breadth X @Model.cartonList[i].height cm</b><a href="#"><i class="bx bxs-info-circle pl-2 text-primary" title="@Model.cartonList[i].title"></i></a></p>
                                                                <div class="bottom-box bg-blue">
                                                                    <div class="col-sm-12 mb-10">
                                                                        <label class="mb-0">Quantity:</label>
                                                                        <input type="number" class="form-control" min="0" id="cartonList_Quantity_@i" onchange="ChangeQuantityValue(@i)" name="model.cartonList[@i].quantity" value=@Model.cartonList[i].quantity placeholder="0" onkeydown="javascript: return [8, 9, 46].includes(event.keyCode) ? true : !isNaN(Number(event.key))">
                                                                    </div>
                                                                    <div class="col-sm-12">
                                                                        <label class="mb-0">kg:</label>
                                                                        <input type="number" class="form-control" min="0" id="cartonList_UserVolume_@i" onchange="ChangeQuantityValue(@i)" name="model.cartonList[@i].UserVolume" value=@Model.cartonList[i].UserVolume placeholder="0" onkeydown="javascript: return [8, 9, 46].includes(event.keyCode) ? true : !isNaN(Number(event.key))">
                                                                    </div>
                                                                    <div id="cartonListError_@i" class="mt-2 text-danger"></div>
                                                                    <div hidden id="cartonListError"></div>
                                                                </div>
                                                                <span id="cartoonType_@i" class="hide">@Model.cartonList[i].type</span>
                                                            </div>
                                                        </div>
                                                    }
                                                }
                                            </div>
                                        </div>
                                    }
                                </div>
                            </div>
                            <div class="col-sm-12">
                                <h2 class=" headingcolor rounded mb-0 mt-2" id="headingTwo">
                                    <button type="button" class="btn btn-block  accordionbtn-collapsed text-left collapsed" data-toggle="collapse" data-target="#collapseTwo">
                                        <span>2 </span>Other popular items?<i class=""></i>
                                        <span id="totalUserVolume_heading2" class="text-success pnlrightheading">
                                        </span>
                                        <span id="totalQuantity_heading2" class="text-success pnlrightheading">
                                        </span>
                                    </button>
                                </h2>
                                <div id="collapseTwo" class="collapse opendiv" @*aria-labelledby="headingTwo" data-parent="#moveJourneyAccordian"*@>
                                    <div class="p-2">
                                        <div class="row">
                                            @if (Model.cartonList != null)
                                            {
                                                for (int i = 0; i < Model.cartonList.Count; i++)
                                                {
                                                    if (Model.cartonList[i].type == "EXTRA" && Model.cartonList[i].display == 1)
                                                    {
                                                        <div class="col-12 col-lg-2 col-md-4 mb-2">
                                                            <div class="border text-center p-4 rounded">
                                                                <div class="cartonheader">
                                                                    <p><span class="mb-5 h6 mt-0" id="cartonList_Volume_@i">@Model.cartonList[i].volume</span> cu ft </p>

                                                                    <p>@Model.cartonList[i].description</p>
                                                                </div>
                                                                <div class="carton-image cartonimg">
                                                                    <img src="~/@Model.cartonList[i].image" height="140" width="120" alt="img" />
                                                                </div>
                                                                <div class="bottom-box">
                                                                    <div class="col-sm-12 mb-10">
                                                                        <label class="mb-0">Quantity:</label>
                                                                        <input type="number" class="form-control" min="0" id="cartonList_Quantity_@i" onchange="ChangeQuantityValue(@i)" name="model.cartonList[@i].quantity" value=@Model.cartonList[i].quantity placeholder="0" onkeydown="javascript: return [8, 9, 46].includes(event.keyCode) ? true : !isNaN(Number(event.key))">
                                                                    </div>
                                                                    <div class="col-sm-12">
                                                                        <label class="mb-0">kg:</label>
                                                                        <input type="number" class="form-control" min="0" id="cartonList_UserVolume_@i" onchange="ChangeQuantityValue(@i)" name="model.cartonList[@i].UserVolume" value=@Model.cartonList[i].UserVolume placeholder="0" onkeydown="javascript: return [8, 9, 46].includes(event.keyCode) ? true : !isNaN(Number(event.key))">
                                                                    </div>
                                                                    <div id="cartonListError_@i" class="mt-2 text-danger"></div>
                                                                </div>
                                                                <span id="cartoonType_@i" class="hide">@Model.cartonList[i].type</span>
                                                            </div>
                                                        </div>
                                                    }
                                                }
                                            }
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-12 ">
                                <h2 class="headingcolor rounded mb-0 mt-2" id="headingThree">
                                    <button type="button" class="btn btn-block  accordionbtn-collapsed text-left collapsed" data-toggle="collapse" data-target="#collapseThree">
                                        <span>3 </span>Anything else ?<i class=""></i>
                                        <span id="totalUserVolume_heading3" class="text-success pnlrightheading">
                                        </span>
                                        <span id="totalQuantity_heading3" class="text-success pnlrightheading">
                                        </span>
                                    </button>
                                </h2>
                                <div id="collapseThree" class="collapse opendiv">
                                    <div class="NewContent p-2">

                                        @if (Model.moveList != null && Model.moveList.Count() > 0)
                                        {
                                            if (Model.moveList[0].Id == 0)
                                            {
                                                <input type="hidden" class="form-control" id="moveListId_0" name="model.moveList[0].Id" value="@Model.moveList[0].Id">
                                                <div>
                                                    <div class="row pt-15 position-relative">
                                                        <div class="col-lg-3 col-xl-3 col-12 form-group">
                                                            <label>Description</label>
                                                            <input type="text" class="form-control anythingElseBlock" id="moveListDesc_0" name="model.moveList[0].description" placeholder="eg. Mirror">
                                                            <span class="text-danger" data-valmsg-for="moveListDesc_0" data-valmsg-replace="true"><span id="moveListDescerror_0" class=""></span></span>
                                                        </div>
                                                        <div class="col-lg-2 col-xl-1 col-12 form-group">
                                                            <label>Quantity</label>
                                                            <input type="number" class="form-control anythingElseBlock" min="0" id="moveListQuantity_0" name="model.moveList[0].quantity" onchange="ChangeQuantityValue(0)" placeholder="0" onkeydown="javascript: return [8, 9, 46].includes(event.keyCode) ? true : !isNaN(Number(event.key))">
                                                            <span class="text-danger" data-valmsg-for="moveListQuantity_0" data-valmsg-replace="true"><span id="moveListQuantityerror_0" class=""></span></span>
                                                        </div>
                                                        <div class="col-lg-3 col-xl-2 col-12 form-group">
                                                            <label>Gross Weight</label>
                                                            <input type="number" class="form-control" min="0" id="moveListUserVolume_0" name="model.moveList[0].UserVolume" onchange="ChangeQuantityValue(0)" placeholder="0" onkeydown="javascript: return [8, 9, 46].includes(event.keyCode) ? true : !isNaN(Number(event.key))">
                                                        </div>
                                                        <div hidden id="moveListError_0" class="mt-2 text-danger"></div>
                                                        <div class="col-lg-2 col-xl-1 col-12 form-group">
                                                            <label>Length</label>
                                                            <input type="number" min="0" class="form-control anythingElseBlock" id="moveListLength_0" name="model.moveList[0].length" onchange="Changevolume(0)" placeholder="eg.30 cm" onkeydown="javascript: return [8, 9, 46].includes(event.keyCode) ? true : !isNaN(Number(event.key))">
                                                            <span class="text-danger" data-valmsg-for="moveListLength_0" data-valmsg-replace="true"><span id="moveListLengthError_0" class=""></span></span>
                                                        </div>
                                                        <div class="col-lg-2 col-xl-1 col-12 form-group">
                                                            <label>Width</label>
                                                            <input type="number" min="0" class="form-control anythingElseBlock" id="moveListBreadth_0" name="model.moveList[0].breadth" onchange="Changevolume(0)" placeholder="eg.30 cm" onkeydown="javascript: return [8, 9, 46].includes(event.keyCode) ? true : !isNaN(Number(event.key))">
                                                            <span class="text-danger" data-valmsg-for="moveListBreadth_0" data-valmsg-replace="true">
                                                                <span id="moveListBreadthError_0" class=""></span>
                                                            </span>
                                                        </div>
                                                        <div class="col-lg-2 col-xl-1 col-12 form-group">
                                                            <label>Height</label>
                                                            <input type="number" min="0" class="form-control anythingElseBlock" id="moveListHeight_0" name="model.moveList[0].height" onchange="Changevolume(0)" placeholder="eg.30 cm" onkeydown="javascript: return [8, 9, 46].includes(event.keyCode) ? true : !isNaN(Number(event.key))">
                                                            <span class="text-danger" data-valmsg-for="moveListHeight_0" data-valmsg-replace="true"><span id="moveListHeightError_0" class=""></span></span>
                                                        </div>
                                                        <div class="col-lg-3 col-xl-2 col-12 form-group">
                                                            <b class="text-success" id="moveListVolume_0" name="obj.moveList[0].Volume"></b>
                                                        </div>
                                                        <div class="col-lg-2 col-xl-1 col-12">
                                                            <a href="javascript:;" onclick="IncrementRow()" class="btn btn-circle mt-4"><i class="icon-plus2"></i></a>

                                                        </div>
                                                    </div>
                                                </div>
                                            }
                                            else
                                            {
                                                for (int i = 0; i < Model.moveList.Where(m => m.Id != 0).Count(); i++)
                                                {
                                                    <div>
                                                        <input type="hidden" class="form-control" id="moveListId_@i" name="model.moveList[@i].Id" value="@Model.moveList[i].Id">
                                                        <div class="row pt-15">
                                                            <div class="col-lg-3 col-xl-3 col-12 form-group">
                                                                <label>Description</label>
                                                                <input type="text" class="form-control anythingElseBlock" id="moveListDesc_@i" name="model.moveList[@i].description" value="@Model.moveList[i].description" placeholder="eg. Mirror">
                                                                <span class="text-danger" data-valmsg-for="moveListDesc_@i" data-valmsg-replace="true"><span id="moveListDescerror_@i" class=""></span></span>
                                                            </div>
                                                            <div class="col-lg-2 col-xl-1 col-12 form-group">
                                                                <label>Quantity</label>
                                                                <input type="number" class="form-control " min="0" id="moveListQuantity_@i" onchange="ChangeQuantityValue(@i)" name="model.moveList[@i].quantity" value=@Model.moveList[i].quantity placeholder="0" onkeydown="javascript: return [8, 9, 46].includes(event.keyCode) ? true : !isNaN(Number(event.key))">
                                                                <span class="text-danger" data-valmsg-for="moveListQuantity_@i" data-valmsg-replace="true"><span id="moveListQuantityerror_@i" class=""></span></span>
                                                            </div>
                                                            <div class="col-lg-3 col-xl-2 col-12 form-group">
                                                                <label>Gross Weight</label>
                                                                <input type="number" class="form-control" min="0" id="moveListUserVolume_@i" onchange="ChangeQuantityValue(@i)" name="model.moveList[@i].UserVolume" value="@Model.moveList[i].UserVolume" placeholder="0" onkeydown="javascript: return [8, 9, 46].includes(event.keyCode) ? true : !isNaN(Number(event.key))">
                                                            </div>
                                                            <div id="moveListError_@i" hidden class="mt-2 text-danger"></div>
                                                            <div class="col-lg-2 col-xl-1 col-12 form-group">
                                                                <label>Length</label>
                                                                <input type="number" class="form-control" min="0" id="moveListLength_@i" name="model.moveList[@i].length" onchange="Changevolume(@i)" value="@Model.moveList[i].length" placeholder="eg.30 cm" onkeydown="javascript: return [8, 9, 46].includes(event.keyCode) ? true : !isNaN(Number(event.key))">
                                                                <span class="text-danger" data-valmsg-for="moveListLength_@i" data-valmsg-replace="true"><span id="moveListLengthError_@i" class=""></span></span>
                                                            </div>
                                                            <div class="col-lg-2 col-xl-1 col-12form-group">
                                                                <label>Width</label>
                                                                <input type="number" class="form-control" min="0" id="moveListBreadth_@i" name="model.moveList[@i].breadth" onchange="Changevolume(@i)" value="@Model.moveList[i].breadth" placeholder="eg.30 cm" onkeydown="javascript: return [8, 9, 46].includes(event.keyCode) ? true : !isNaN(Number(event.key))">
                                                                <span class="text-danger" data-valmsg-for="moveListBreadth_@i" data-valmsg-replace="true">
                                                                    <span id="moveListBreadthError_@i" class=""></span>
                                                                </span>
                                                            </div>
                                                            <div class="col-lg-2 col-xl-1 col-12 form-group">
                                                                <label>Height</label>
                                                                <input type="number" class="form-control" min="0" id="moveListHeight_@i" name="model.moveList[@i].height" onchange="Changevolume(@i)" value="@Model.moveList[i].height" placeholder="eg.30 cm" onkeydown="javascript: return [8, 9, 46].includes(event.keyCode) ? true : !isNaN(Number(event.key))">
                                                                <span class="text-danger" data-valmsg-for="moveListHeight_@i" data-valmsg-replace="true"><span id="moveListHeightError_@i" class=""></span></span>
                                                            </div>
                                                            <div class="col-lg-2 col-xl-1 col-12 form-group">
                                                                <span id="moveListVolume_@i" name="obj.moveList[@i].Volume"></span>
                                                            </div>
                                                            <div class="col-lg-2 col-xl-1 col-12">
                                                            </div>
                                                            <div class="col-lg-2 col-xl-1 col-12">
                                                                <a href="javascript:;" onclick="IncrementRow()" class="btn btn-circle mt-4"><i class="icon-plus2"></i></a>

                                                            </div>
                                                        </div>
                                                    </div>
                                                }
                                            }
                                        }

                                        <div class="delete-row"></div>

                                    </div>



                                </div>
                                <div class="row">
                                    <div class="col-md-12  mt-3">
                                        <div class="d-flex align-items-center justify-content-between">
                                            <a href="@Url.Action("Index", "Baggage")" class="btn btn-cancel">Back</a>
                                            <button class="btn btn-warning" type="submit" onclick="return SubmitForm();">Save</button>
                                        </div>

                                    </div>
                                </div>

                            </div>
                        </div>

                    </div>
                </div>

            </div>
        </div>
    </div>


}
@*@(Html.Kendo().Window()
    .Name("quoteDetailsWindow")
    .Visible(false)
    .Draggable(true)
    .Modal(true)
    .Width(650)
    .Height(380))*@
<div class="modal fade" id="QuoteDetailPopup" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">

    <div class="modal-dialog  modal-dialog-centered modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <span class="h4 mb-0" id="myModalLabel">Quick Quote Detail</span>
                <button type="button" class="close" data-dismiss="modal">
                    <span aria-hidden="true">&times;</span><span class="sr-only">Close</span>
                </button>
            </div>
            <div class="modal-body">
                <div id="divQuoteDetailPopup">
                </div>
            </div>
        </div>
    </div>

</div>
<script>
    //var count = 1;
    var count = '@Model.moveList.Where(m => m.description != null).Count()';
    if (count == 0) { count++; }
    $(document).ready(function (e) {

        $("#menu_Baggage").addClass("active");
        $("#menu_QuoteDetails").children().removeClass("collapsed");
        $("#menu_QuoteDetails").children().addClass("show");
        $("#menu_QuoteDetails").addClass("active");
        //$('#baggageQuoteForm').kendoValidator();
        if ('@Model.baggageQuote.FromCountry'== 'UK') {
            let ToCountry = "<option value ='UK' selected>UNITED KINGDOM</option>";
            $("#baggageQuote_FromCountry").append(ToCountry);
        }
        if ($("#baggageQuote_FromCity").val() == "") {
            $("#FromCityDiv").hide();
        } else {
            $('#FromPostCodeDiv').hide();
        }
        if ($("#baggageQuote_ToPostCode").val() == "") {
            $("#ToPostCodeDiv").hide();
        } else {
            $('#ToCityDiv').hide();
        }

        //if ($("#model_baggageQuote_ToCountry").val() != "UK") {
        //    var widget = $("#model_baggageQuote_ToCountry").getKendoDropDownList();
        //    var dataSource = widget.dataSource;
        //    dataSource.remove({
        //        "text": "UNITED KINGDOM",
        //        "value": "UK"
        //    });
        //}
        //if ($("#Id").val() > 0) {
        //    let QuickQuoteItem = $("#QuickQuoteItemId").val();
        //    setTimeout(function () {
        //        if (QuickQuoteItem > 0) {
        //            $("#QuickQuoteItemId").val(QuickQuoteItem);
        //            $("#Beds").attr("disabled", "disabled");
        //            $("#Cuft").attr("disabled", "disabled");
        //            $("#Ftcontainer").attr("disabled", "disabled");
        //            $("#" + QuickQuoteItem).removeClass("btn btn-outline-secondary");
        //            $("#" + QuickQuoteItem).addClass("btn btn-success-600 btn-lg d-flex align-items-center legitRipple");
        //            $("#" + QuickQuoteItem).html("<i class='bx bx-check font-lg'></i> Selected");
        //            $("#" + QuickQuoteItem).addClass("btn btn-outline-secondary");
        //            $("#Cuft").val("");
        //        }
        //    }, 200)
        //}
        if ($("#baggageQuote_IsInquiry").val() == "True") {
            @*var urllink = '@Url.Action("ShowQuoteDetails", "Baggage")';
            var window = $("#quoteDetailsWindow").data("kendoWindow");
            window.content("");
            window.title("Quote Details");
            window.refresh({
                url: urllink
            });
            window.center();
            window.open();*@
            QuickQuotePopup();
        }
        ChangeQuantityValue();
        OnFromCountryCodeChange();
        OnToCountryCodeChange();

    })
    function QuickQuotePopup() {
        $.ajax({
            url: '@Url.Action("ShowQuoteDetails", "Baggage")',
            async: false,
            type: 'GET',
            success: function (data) {
                if (data) {
                    $('#QuoteDetailPopup').modal('show');
                    $('#divQuoteDetailPopup').html(data);
                }
            }
        });

        @*const urllink = '@Url.Action("QuickOnlineQuoteDetail", "InternationalRemoval")?Id=' + $("#Id").val() + '&IsQuoteIfo=true&IsInquiry=true';
        var window = $("#quoteDetailsWindow").data("kendoWindow");
        window.content("");
        window.title("Quote Details");
        window.refresh({
            url: urllink
        });
        window.center();
        setTimeout(
            function () { window.open(); }, 500
        );
        window.open();*@
    }
    var isValid = false;

    //$('form').submit(function (e) {
    function SubmitForm() {
        if (!$("#baggageQuoteForm").valid()) {
            return false;
        }
        ItemDetailsValidation();
        if ($("#baggageQuote_FromCountry").val() == "UK") {
            $("#baggageQuote_FromCity").attr("disabled", "disabled");
            $("#baggageQuote_PostCode").attr("disabled", false);
        } else {
            $("#baggageQuote_FromCity").attr("disabled", false);
            $("#baggageQuote_PostCode").attr("disabled", "disabled");
        }
        if ($("#baggageQuote_ToCountry").val() == "UK") {
            $("#baggageQuote_CityName").attr("disabled", "disabled");
            $("#baggageQuote_ToPostCode").attr("disabled", false);
        } else {
            $("#baggageQuote_ToCountry").attr("disabled", false);
            $("#baggageQuote_ToPostCode").attr("disabled", "disabled");
        }
        //if ($("#baggageQuote_TitleId").val() == "") {
        //    $("#baggageQuote_TitleId").attr("required", "required");
        //    $("#baggageQuote_TitleId").attr("Name", "TitleId");
        //} else {
        //    $("#baggageQuote_TitleId").attr("Name", "model.baggageQuote.TitleId");
        //}
        //if ($("#baggageQuote_Firstname").val() == "") {
        //    $("#baggageQuote_Firstname").attr("required", "required");
        //    $("#baggageQuote_Firstname").attr("Name", "FirstName");
        //} else {
        //    $("#baggageQuote_Firstname").attr("Name", "model.baggageQuote.Firstname");
        //}
        //if ($("#baggageQuote_Lastname").val() == "") {
        //    $("#baggageQuote_Lastname").attr("required", "required");
        //    $("#baggageQuote_Lastname").attr("Name", "LastName");
        //} else {
        //    $("#model_baggageQuote_Lastname").attr("Name", "model.baggageQuote.Lastname");
        //}
        //if ($("#baggageQuote_Email").val() == "") {
        //    $("#baggageQuote_Email").attr("required", "required");
        //    $("#baggageQuote_Email").attr("Name", "Email");
        //} else {
        //    $("#baggageQuote_Email").attr("Name", "model.baggageQuote.Email");
        //}
        //if ($("#baggageQuote_Telephone").val() == "") {
        //    $("#baggageQuote_Telephone").attr("required", "required");
        //    $("#baggageQuote_Telephone").attr("Name", "Telephone");
        //} else {
        //    $("#baggageQuote_Telephone").attr("Name", "model.baggageQuote.Telephone");
        //}

        if ($("#quantityvalidation").text().trim() != "") {
            return false;
        }
        if (isValid == true) {
            hideLoader();
            return false;
        }
        if ($('#model_baggageQuote_PostCode_error').text() != "") {
            return false;
        }

        if ($("#cartonListError").text() != "") {
            bootbox.alert({
                message: "You have entered a weight over the maximum allowed 40kg weight limit per item. Please amend weight.",
                callback: function () {
                }
            });
            return false;
        }
        var cartonCount = '@Model.cartonList.Count()';
        var invalidQuantity = false;
        for (var i = 0; i < cartonCount; i++) {
            if ($("#cartonListError_" + i).text() != "") {
                invalidQuantity = true;
            }
        }

        var moveCount = '@Model.moveList.Count()';
        var invalidQty = false;
        for (var i = 0; i < moveCount; i++) {
            if ($("#moveListError_" + i).text() != "") {
                invalidQty = true;
            }
        }

        if (invalidQuantity == true) {
            return false;
        }
        if (invalidQty == true) {
            bootbox.alert({
                message: "You have entered a weight over the maximum allowed 40kg weight limit per item. Please amend weight.",
                callback: function () {
                }
            })
            return false;;
        }
    }
    //);

    function DimensionValidation() {
        $(".dimensions").change(function () {
            var inputval = $(this).val();
            var numericReg = /^[0-9]{1,9}\*[0-9]{1,9}\*[0-9]{1,9}$/;
            if (!numericReg.test(inputval)) {
                $(this).next().next().text("Please enter valid dimension, eg. 30 * 30 * 30.").attr('style', 'Display: block; Color:red ; margin-bottom : -10px ').addClass("errorClass");
            }
            else {
                $(this).next().next().text(" ").removeClass("errorClass");
            }
        });
    }

    function AddCustomer() {
        // read only controls
        if ($("#model_baggageQuote_FromCountry").val() == "UK") {
            $("#model_baggageQuote_FromCity").attr("disabled", "disabled");
            $("#model_baggageQuote_PostCode").attr("disabled", false);
        } else {
            $("#model_baggageQuote_FromCity").attr("disabled", false);
            $("#model_baggageQuote_PostCode").attr("disabled", "disabled");
        }
        if ($("#model_baggageQuote_ToCountry").val() == "UK") {
            $("#model_baggageQuote_CityName").attr("disabled", "disabled");
            $("#model_baggageQuote_ToPostCode").attr("disabled", false);
        } else {
            $("#model_baggageQuote_ToCountry").attr("disabled", false);
            $("#model_baggageQuote_ToPostCode").attr("disabled", "disabled");
        }
        if ($("#baggageQuoteForm").kendoValidator().data("kendoValidator").validate() == true) {
            $('#model_baggageQuote_TitleId').prop('readonly', true);
            $('#model_baggageQuote_Firstname').prop('readonly', true);
            $('#model_baggageQuote_Lastname').prop('readonly', true);
            $('#model_baggageQuote_Email').prop('readonly', true);
            $('#model_baggageQuote_Telephone').prop('readonly', true);
            $("#model_baggageQuote_TitleId").data("kendoDropDownList").readonly();
            $("#model_baggageQuote_CountryCode").data("kendoDropDownList").readonly();
            $('#model_baggageQuote_PostCode').prop('readonly', true);
            $("#model_baggageQuote_EstimatedMoveDate").data("kendoDatePicker").readonly(true);
            $('#model_baggageQuote_ToPostCode').prop('readonly', true);
            $("#model_baggageQuote_FromCountry").data("kendoDropDownList").readonly();
            $("#model_baggageQuote_FromCity").data("kendoDropDownList").readonly();
            $("#model_baggageQuote_ToCountry").data("kendoDropDownList").readonly();
            $("#model_baggageQuote_CityName").data("kendoDropDownList").readonly();

            //model_baggageQuote_ToCity
            for (var i = 0; i < $("#baggageQuoteForm").serializeArray().length; i++) {
                if ($("#baggageQuoteForm").serializeArray()[i].name.includes("UserVolume")) {
                    var userVolId = $("#baggageQuoteForm").serializeArray()[i].name;
                    if (userVolId != null && document.getElementById(userVolId) != null) {
                        document.getElementById(userVolId).value = "";
                    }
                }
                if ($("#baggageQuoteForm").serializeArray()[i].name.includes("quantity")) {
                    var quantityId = $("#baggageQuoteForm").serializeArray()[i].name;
                    if (quantityId != null && document.getElementById(quantityId) != null) {
                        document.getElementById(quantityId).value = "";
                    }
                }
            }

            var data = $('#baggageQuoteForm').serializeArray();
            data.push({ name: 'isEdit', value: true });

            $.ajax({
                url: '@Url.Action("AddEdit", "Baggage")',
                async: false,
                type: 'POST',
                data: data,
                success: function (data) {
                    if (data.Message == "") {
                        //SucessMessage("Quote Added Successfully");
                        toastr.success("Quote Added Successfully");
                    }
                    else {
                        toastr.error("Please select at least one item");
                        //ShowErrorMessage("Please select at least one item");
                    }
                },
            })
        }
    }

    //function getFromCountryCode() {
    //    return {
    //        countryCode: $("#model_baggageQuote_FromCountry").val()
    //    };
    //}
    $("#baggageQuote_ToCountry").change(function () {
        OnToCountryCodeChange();
    })

    function OnToCountryCodeChange() {
        const countryId = $("#baggageQuote_ToCountry").val();
        if ($('#baggageQuote_ToCountry').val() == 'UK') {
            if ($('#baggageQuote_FromCountry option[value="UK"]').length > 0) {
                $('#baggageQuote_FromCountry option[value="UK"]').remove();
            }
        } else {
            var isExists = false;
            if ($('#baggageQuote_FromCountry option[value="UK"]').length > 0) {
                isExists = true;
            }

            if (isExists != true) {
                let ToCountry = "<option value ='UK'>UNITED KINGDOM</option>";
                $("#baggageQuote_FromCountry").append(ToCountry);
            }
        }
        if (countryId == 'UK') {
            $('#ToCityDiv').hide();
            $('#ToPostCodeDiv').show();
        }
        else {
            $('#ToCityDiv').show();
            $('#ToPostCodeDiv').hide();
            $('#baggageQuote_ToPostCode').val("");
        }
         $.ajax({
             url: '@Url.Action("GetCityListByCountryId", "Baggage")',
             async: false,
             type: 'POST',
             data: { 'countryCode': countryId },
             success: function (data) {

                 const cityName = '@Model.baggageQuote.CityName';
                 $("#baggageQuote_CityName").html("");
                 let ToCountryDDL = "<select'>";
                 for (var i = 0; i < data.length; i++) {
                     if (cityName != null && data[i].CityName == cityName) {
                         ToCountryDDL = ToCountryDDL + '<option value = "' + data[i].CityName + '" Selected>' + data[i].CityName + '</option>';
                     } else {
                         ToCountryDDL = ToCountryDDL + '<option value = "' + data[i].CityName + '">' + data[i].CityName + '</option>';
                     }
                 }
                 ToCountryDDL = ToCountryDDL + '</select>';
                 $("#baggageQuote_CityName").html(ToCountryDDL);
             },
         })
    }
    //function getToCountryCode() {
    //    return {
    //        countryCode: $("#model_baggageQuote_ToCountry").val()
    //    };
    //}
    $("#baggageQuote_FromCountry").change(function () {

        OnFromCountryCodeChange();
    })

    function OnFromCountryCodeChange() {
        const countryId = $("#baggageQuote_FromCountry").val();
        if ($('#baggageQuote_FromCountry').val() == 'UK') {
            if ($('#baggageQuote_ToCountry option[value="UK"]').length > 0) {
                $('#baggageQuote_ToCountry option[value="UK"]').remove();
            }
        } else {
            var isExists = false;
            if ($('#baggageQuote_ToCountry option[value="UK"]').length > 0) {
                isExists = true;
            }

            if (isExists != true) {
                let ToCountry = "<option value ='UK'>UNITED KINGDOM</option>";
                $("#baggageQuote_ToCountry").append(ToCountry);
            }
        }
        if (countryId == 'UK') {
            $('#FromCityDiv').hide();
            $('#FromPostCodeDiv').show();
        }
        else {
            $('#FromCityDiv').show();
            $('#FromPostCodeDiv').hide();
            $('#baggageQuote_PostCode').val("");
        }
            $.ajax({
                url: '@Url.Action("GetCityListByCountryId", "Baggage")',
                async: false,
                type: 'POST',
                data: { 'countryCode': countryId },
                success: function (data) {

                    const cityName = '@Model.baggageQuote.FromCity';
                    $("#baggageQuote_FromCity").html("");
                    let ToCountryDDL = "<select'>";
                    for (var i = 0; i < data.length; i++) {
                        if (cityName != null && data[i].CityName == cityName) {
                            ToCountryDDL = ToCountryDDL + '<option value = "' + data[i].CityName + '" Selected>' + data[i].CityName + '</option>';
                        } else {
                            ToCountryDDL = ToCountryDDL + '<option value = "' + data[i].CityName + '">' + data[i].CityName + '</option>';
                        }
                    }
                    ToCountryDDL = ToCountryDDL + '</select>';
                    $("#baggageQuote_FromCity").html(ToCountryDDL);
                },
            })

    }
    @*$("#model_baggageQuote_FromCountry").change(function () {
        if ($('#model_baggageQuote_FromCountry').val() == 'UK') {
            var dropdownlist = $("#model_baggageQuote_ToCountry").data("kendoDropDownList");
            var items = dropdownlist.dataSource.data();
            for (i = 0; i < items.length; i++) {
                if (items[i].country_code == "UK") {
                    foundItem = items[i];
                    dropdownlist.dataSource.remove(foundItem);
                    break;
                }
            }
        } else {
            var dropdownlist = $("#model_baggageQuote_ToCountry").data("kendoDropDownList");
            var isExists = false;
            var items = dropdownlist.dataSource.data();
            for (i = 0; i < items.length; i++) {
                if (items[i].country_code == "UK") {
                    $("#model_baggageQuote_FromCountry").data("kendoDropDownList").dataSource.remove(items[i]);
                    isExists = true;
                    break;
                    //return
                }
            }
            if (isExists != true) {
                   $("#model_baggageQuote_ToCountry").data("kendoDropDownList")
                    .dataSource.add({ "country_code": "UK", "country": "UNITED KINGDOM" });
            }
        }
        var countryId = $("#model_baggageQuote_FromCountry").val();
        if (countryId == 'UK') {
            $('#FromCityDiv').hide();
            $('#FromPostCodeDiv').show();
        }
        else {
            $('#FromCityDiv').show();
            $('#FromPostCodeDiv').hide();
            $('#model_baggageQuote_PostCode').val("");
        }
         $.ajax({
             url: '@Url.Action("GetCityListByCountryId", "Baggage")',
             async: false,
             type: 'POST',
             dataType: "json",
             data: { 'countryCode': countryId },
             success: function (data) {
                 var ddl = $("#model_baggageQuote_FromCity").data("kendoDropDownList");
                 ddl.dataSource.data().empty();
                 //$("#model_baggageQuote_FromCity").html("");
                 $.each(data, function (i, data) {
                     $("#model_baggageQuote_FromCity").data("kendoDropDownList")
                         .dataSource.add({ "country_code": data.country_code, "CityName": data.CityName });

                 });
             },
             error: function(e) {
                 console.log(e);
             }
                })
    })
    $("#model_baggageQuote_ToCountry").change(function () {
        if ($('#model_baggageQuote_ToCountry').val() == 'UK') {
            var dropdownlist = $("#model_baggageQuote_FromCountry").data("kendoDropDownList");
            var items = dropdownlist.dataSource.data();
            for (i = 0; i < items.length; i++) {
                if (items[i].country_code == "UK") {
                    foundItem = items[i];
                    dropdownlist.dataSource.remove(foundItem);
                    break;
                }
            }
        } else {
            var dropdownlist = $("#model_baggageQuote_FromCountry").data("kendoDropDownList");
            var isExists = false;

            var items = dropdownlist.dataSource.data();
            for (i = 0; i < items.length; i++) {
                if (items[i].country_code == "UK") {
                    $("#model_baggageQuote_ToCountry").data("kendoDropDownList").dataSource.remove(items[i]);
                    isExists = true;
                    break;
                }
            }

            //dropdownlist.search(function (dataItem) {
            //    if (dataItem.country_code == "UK") { isExists = true; }
            //    return dataItem.country_code === "UK";
            //});

            if (isExists != true) {
                $("#model_baggageQuote_FromCountry").data("kendoDropDownList")
                    .dataSource.add({ "country_code": "UK", "country": "UNITED KINGDOM" });
                //$("#model_baggageQuote_ToCountry").data("kendoDropDownList")
                //    .dataSource.remove({ "country_code": "UK", "country": "UNITED KINGDOM" });

            }
        }
        var countryId = $("#model_baggageQuote_ToCountry").val();
        if (countryId == 'UK') {
            $('#ToCityDiv').hide();
            $('#ToPostCodeDiv').show();
        }
        else {
            $('#ToCityDiv').show();
            $('#ToPostCodeDiv').hide();
            $('#model_baggageQuote_ToPostCode').val("");
        }
        $.ajax({
            url: '@Url.Action("GetCityListByCountryId", "Baggage")',
            async: false,
            type: 'POST',
            dataType: "json",
            data: { 'countryCode': countryId },
            success: function (data) {
                var ddl = $("#model_baggageQuote_CityName").data("kendoDropDownList");
                ddl.dataSource.data().empty();

                $("#model_baggageQuote_CityName").html("");
                $.each(data, function (i, data) {
                    $("#model_baggageQuote_CityName").data("kendoDropDownList")
                        .dataSource.add({ "country_code": data.country_code, "CityName": data.CityName });
                });
            },
            error: function(e) {
                console.log(e);
            }
        })
    });*@
    function ValidatePostcode() {
        var fromcountry = $('#baggageQuote_FromCountry').val();
        var postCode = $("#baggageQuote_PostCode").val();
        var tocountry = $('#baggageQuote_ToCountry').val();
        var topostCode = $("#baggageQuote_ToPostCode").val();
        if ((fromcountry == 'UK' && postCode.trim() != "") || (tocountry == 'UK' && topostCode.trim() != "")) {
            var code = "";
            if (postCode == "") { code = topostCode } else { code = postCode }
            const IsValidPostCode = CheckValidPostCode(code);
            if (IsValidPostCode) {
                $("#BranchId").val(IsValidPostCode);
                $('#model_baggageQuote_PostCode_error').text('');
            }
            else {
                $('#model_baggageQuote_PostCode_error').text('Please enter valid post code.');
            }
            @* $.ajax({
                url: '@Url.Action("CheckValidPostCode", "Baggage")',
                async: false,
                type: 'POST',
                data: { 'postCode': topostCode },
                success: function (data) {
                    if (data != false) {
                        $("#BranchId").val(data);
                        $('#model_ToPostCode_error').text('');
                    }
                    else {
                        $('#model_ToPostCode_error').text('Please enter valid post code.');
                        //return false;
                    }
                }
            });*@
        }

    }

    function CheckValidPostCode(code) {
        if ( code.trim() != "")  {
                $.ajax({
                    url: '@Url.Action("CheckValidPostCode", "Baggage")',
                    async: false,
                    type: 'POST',
                    data: { 'postCode': code },
                    success: function (data) {
                        return data
                    }
                });
        }
    }

    function IncrementRow() {
        var i = count++;
        //var i = 0;
        var  test = @Model.moveList.Where(m => m.description != null).Count();


        var Result = "<div> <div class='row pt-15'>" +
            "<div class='col-lg-3 col-xl-3 col-12 form-group' >" +
                     "<label>Description</label>" +
                     "<input type='text' class='form-control anythingElseBlock' name='model.moveList["+ i + "].description' id='moveListDesc_" + i + "'  placeholder='eg. Mirror'>"+
                     "<span class='text-danger' data-valmsg-for='moveListDesc_" + i + "' data-valmsg-replace='true'><span id='moveListDescerror_" + i + "' class=''></span></span>"+
             "</div>"+
             "<div class='col-lg-2 col-xl-1 col-12 form-group'>"+
                     "<label>Quantity</label>"+
            "<input type='number' class='form-control  anythingElseBlock' min='0' name='model.moveList[" + i + "].quantity' id='moveListQuantity_" + i + "' onchange='ChangeQuantityValue(" + i + ")' placeholder='0' onkeydown='javascript: return [8, 9, 46].includes(event.keyCode) ? true : !isNaN(Number(event.key))'>"+
                     "<span class='text-danger' data-valmsg-for='moveListQuantity_"+ i + "' data-valmsg-replace='true'><span id='moveListQuantityerror_" + i + "' class=''></span></span>"+
             "</div>"+
             "<div class='col-lg-3 col-xl-2 col-12 form-group'>"+
                     "<label>Gross Weight</label>"+
            "<input type='number' class='form-control ' min='0' name='model.moveList[" + i + "].UserVolume' id='moveListUserVolume_" + i + "' onchange='ChangeQuantityValue(" + i +")' placeholder='0' onkeydown='javascript: return [8, 9, 46].includes(event.keyCode) ? true : !isNaN(Number(event.key))'>"+
              "<div hidden id='moveListError_"+ i +"' class='mt-2 text-danger'></div>"+
             "</div>"+

             "<div class='col-lg-2 col-xl-1 col-12 form-group'>"+
                 "<label>Length</label>"+
            "<input type='number' min='0' class='form-control anythingElseBlock' id='moveListLength_" + i + "' name='model.moveList[" + i + "].length' onchange='Changevolume(" + i + ")' placeholder='eg.30 cm' onkeydown='javascript: return [8, 9, 46].includes(event.keyCode) ? true : !isNaN(Number(event.key))'>"+
                 "<span class='text-danger' data-valmsg-for='moveListLength_"+ i + "' data-valmsg-replace='true'><span id='moveListLengthError_" + i + "' class=''></span></span>"+
             "</div>"+
             "<div class='col-lg-2 col-xl-1 col-12form-group'>"+
                 "<label>Width</label>"+
            "<input type='number' min='0' class='form-control anythingElseBlock' id='moveListBreadth_" + i + "' name='model.moveList[" + i + "].breadth' onchange='Changevolume(" + i + ")' placeholder='eg.30 cm' onkeydown='javascript: return [8, 9, 46].includes(event.keyCode) ? true : !isNaN(Number(event.key))'>"+
                 "<span class='text-danger' data-valmsg-for='moveListBreadth_"+ i + "' data-valmsg-replace='true'>"+
                     "<span id='moveListBreadthError_"+ i + "' class=''></span>"+
                 "</span>"+
             "</div>"+
             "<div class='col-lg-2 col-xl-1 col-12 form-group'>"+
                 "<label>Height</label>"+
            "<input type='number' min='0' class='form-control anythingElseBlock' id='moveListHeight_" + i + "' name='model.moveList[" + i + "].height' onchange='Changevolume(" + i + ")' placeholder='eg.30 cm' onkeydown='javascript: return [8, 9, 46].includes(event.keyCode) ? true : !isNaN(Number(event.key))'>"+
                 "<span class='text-danger' data-valmsg-for='moveListHeight_"+ i + "' data-valmsg-replace='true'><span id='moveListHeightError_" + i +"' class=''></span></span>"+
             "</div>"+
            "<div class='col-lg-3 col-xl-2 col-12 form-group'>"+
            "<b class='text-success' id='moveListVolume_"+ i + "' name='obj.moveList[" + i +"].Volume'></b>"+
            "</div> "+
            "<div class='col-lg-2 col-xl-1 col-12'>"+
            "<button class='btn btn-circle mt-4' onclick='return remove(this)'><i class='icon-minus2'></i></button>"+
              "</div>"+
        "</div>"+
"</div>";

        $('.NewContent').append(Result);
        DimensionValidation();
    }

    function remove(e) {
        $(e).parent().parent().parent().remove();
        UpdateVolumeQtyLabel();
        return false;
    }
    function openQuoteDetails() {
       // $('#baggageQuoteForm').kendoValidator();
        if ($('#internationalRemovalQuoteForm').valid()) {
            if ($("#baggageQuote_FromCountry").val() == "UK") {
                $("#baggageQuote_FromCity").attr("disabled", "disabled");
                $("#baggageQuote_PostCode").attr("disabled", false);
            } else {
                $("#baggageQuote_FromCity").attr("disabled", false);
                $("#baggageQuote_PostCode").attr("disabled", "disabled");
            }
            if ($("#baggageQuote_ToCountry").val() == "UK") {
                $("#baggageQuote_CityName").attr("disabled", "disabled");
                $("#baggageQuote_ToPostCode").attr("disabled", false);
            } else {
                $("#baggageQuote_ToCountry").attr("disabled", false);
                $("#baggageQuote_ToPostCode").attr("disabled", "disabled");
            }
        }
    }
    function ClearInventory() {
        var cartonListCount = '@Model.cartonList.Count()';
        var moveListCount = '@Model.moveList.Count()';
        for (var i = 0; i < cartonListCount; i++) {
            $("#cartonList_Quantity_" + i).val("");
            $("#cartonList_UserVolume_" + i).val("");
        }
        for (var i = 0; i < moveListCount; i++) {
            $("#moveListQuantity_" + i).val("");
            $("#moveListUserVolume_" + i).val("");
            $("#moveListLength_" + i).val("");
            $("#moveListBreadth_" + i).val("");
            $("#moveListHeight_" + i).val("");
            $("#moveListDesc_" + i).val("");
            $("#moveListVolume_" + i).text("");
        }

        //for (var i = 0; i < $("#baggageQuoteForm").serializeArray().length; i++) {
        //    if ($("#baggageQuoteForm").serializeArray()[i].name.includes("UserVolume")) {
        //        var userVolId = $("#baggageQuoteForm").serializeArray()[i].name;
        //        if (userVolId != null && document.getElementById(userVolId) != null) {
        //            document.getElementById(userVolId).value = "";
        //        }
        //    }
        //    if ($("#baggageQuoteForm").serializeArray()[i].name.includes("quantity")) {
        //        var quantityId = $("#baggageQuoteForm").serializeArray()[i].name;
        //        if (quantityId != null && document.getElementById(quantityId) != null) {
        //            document.getElementById(quantityId).value = "";
        //        }
        //    }
        //}
        $("#totalQuantity").text("");
        $("#totalUserVolume").text("");

    }
    function OpenQuoteDetailsWindow(e) {
        if ($("#baggageQuoteForm").valid()) {

            //  $('#baggageQuoteForm').kendoValidator();
            if ($("#baggageQuote_FromCountry").val() == "UK") {
                $("#baggageQuote_FromCity").attr("disabled", "disabled");
                $("#baggageQuote_PostCode").attr("disabled", false);
            } else {
                $("#baggageQuote_FromCity").attr("disabled", false);
                $("#baggageQuote_PostCode").attr("disabled", "disabled");
            }
            if ($("#baggageQuote_ToCountry").val() == "UK") {
                $("#baggageQuote_CityName").attr("disabled", "disabled");
                $("#baggageQuote_ToPostCode").attr("disabled", false);
            } else {
                $("#baggageQuote_ToCountry").attr("disabled", false);
                $("#baggageQuote_ToPostCode").attr("disabled", "disabled");
            }
        }

        ItemDetailsValidation();
        if ($("#baggageQuoteForm").valid()) {
                var data = $('#baggageQuoteForm').serializeArray();
                data.push({ name: 'isInquiry', value: true });
                $.ajax({
                    url: '@Url.Action("AddEdit", "Baggage")',
                    async: false,
                    type: 'POST',
                    data: data,
                    success: function (data) {
                        if (data.data != "") {
                            if (data.data > 0) {
                                window.location.href = "/Baggage/AddEdit?Id=" + data.data;
                            } else {
                                var errormessage = '@TempData[CustomEnums.NotifyType.Error.GetDescription()]';
                                toastr.error("Please select at least one item");
                            }

                        }
                        else {
                            var errormessage = '@TempData[CustomEnums.NotifyType.Error.GetDescription()]';
                            toastr.error("Please select at least one item");
                        }
                    },
                })
        }
    }


    function ShowQuoteData() {
        var Id = $("#model_baggageQuote_Id").val();
        window.open($("#localhost").text() + "/MyQuote/Index?baggageId=" + Id,"_blank");
    }
    function onClose() {
        var w = $("#quoteDetailsWindow").data("kendoWindow");
        w.close();
    }

    function ChangeQuantityValue(id) {

        UpdateVolumeQtyLabel();

        var volume = $("#cartonList_UserVolume_" + id).val();
        var quantity = $("#cartonList_Quantity_" + id).val();
        if (volume > 0 && quantity > 0) {
            if (volume > quantity * 40) {
                $("#cartonListError").text("Validate false");
                bootbox.alert({
                    message: "You have entered a weight over the maximum allowed 40kg weight limit per item. Please amend weight.",
                    callback: function () {
                    }
                })
                $("#cartonListError_" + id).text("");
                return false;
            }
            else {
                $("#cartonListError_" + id).text("");
                $("#cartonListError").text("");
            }
        }
        else if (volume > 0) {
            if (quantity == 0 || quantity == "") {
                $("#cartonListError_" + id).text("Please select quantity");
                return false;
            } else {
                $("#cartonListError_" + id).text("");
            }
        }
        else if ((volume == "" || volume == 0) && (quantity == "" || quantity)) {
            $("#cartonListError_" + id).text("");
        }

        var moveListQuantity = $("#moveListQuantity_" + id).val();
        var moveListVolume = $("#moveListUserVolume_" + id).val();

        if (moveListVolume > 0 && moveListQuantity > 0) {
            if (moveListVolume > moveListQuantity * 40) {
                $("#moveListError_" + id).text("Validate false");
                bootbox.alert({
                    message: "You have entered a weight over the maximum allowed 40kg weight limit per item. Please amend weight.",
                    callback: function () {
                    }
                })
                return false;
            }
            else {
                $("#moveListQuantityerror_" + id).text("");
                $("#moveListError_" + id).text("");
            }
        }
        else if (moveListVolume > 0) {
            if (moveListQuantity == 0 || moveListQuantity == "") {
                $("#moveListQuantityerror_" + id).text('Quantity is required');
                $('#headingThree .btn').removeClass('collapsed');
                $('#collapseThree').addClass('show');
                return false;
            } else {

            }
        }
    }

    function UpdateVolumeQtyLabel() {
        var cartonCount = '@Model.cartonList.Count()';
        var moveListCount = '@Model.moveList.Count()';
        var quantity = 0;
        var volume = 0;
        var moveListQty = 0;
        var moveListVolume = 0;
        var qtyVolume = 0;
        var totalVolume = 0
        var maintotalQty = 0,
            maintotalqtyVolume = 0,
            extratotalQty = 0,
            extratotalqtyVolume = 0;
        for (var i = 0; i < cartonCount; i++) {
            var quantityVal = $("#cartonList_Quantity_" + i).val();
            var volumeVal = $("#cartonList_UserVolume_" + i).val();
            var qtyVolVal = $("#cartonList_Volume_" + i).text();

            if (quantityVal != "" && quantityVal != "0" && quantityVal != undefined) {
                if (quantityVal > 0) {
                    quantity = quantity + parseInt(quantityVal);
                    qtyVolume = qtyVolume + (quantityVal * qtyVolVal);
                }
            }
            if (volumeVal != "" && volumeVal != "0" && volumeVal != undefined) {
                if (volumeVal > 0) {
                    volume = volume + parseInt(volumeVal);
                }
            }
            var cartoonTypeVal = $("#cartoonType_" + i).text();
            if (cartoonTypeVal && cartoonTypeVal.toUpperCase() == "MAIN") {

                maintotalQty = maintotalQty + (parseInt(quantityVal) || 0);
                var mainqtyVal = (parseInt(quantityVal) || 0);
                if (mainqtyVal && mainqtyVal > 0) {
                    var mainVolValue = (parseInt(qtyVolVal) || 0);
                    maintotalqtyVolume = maintotalqtyVolume + parseInt(mainqtyVal * mainVolValue);
                }
            }
            else if (cartoonTypeVal && cartoonTypeVal.toUpperCase() == "EXTRA") {
                extratotalQty = extratotalQty + (parseInt(quantityVal) || 0);
                var extraqtyVal = (parseInt(quantityVal) || 0);
                if (extraqtyVal && extraqtyVal > 0) {
                    var extraVolValue = (parseInt(qtyVolVal) || 0);
                    extratotalqtyVolume = extratotalqtyVolume + parseInt(extraqtyVal * extraVolValue);
                }
            }
        }

        $("#totalQuantity_heading1").text(maintotalQty + " Quantity");
        $("#totalUserVolume_heading1").text(maintotalqtyVolume + " Cuft");

        $("#totalQuantity_heading2").text(extratotalQty + " Quantity");
        $("#totalUserVolume_heading2").text(extratotalqtyVolume + " Cuft");

        for (var i = 0; i < moveListCount; i++) {
            var length = $("#moveListLength_" + i).val() == "" ? 0 : $("#moveListLength_" + i).val();
            var width = $("#moveListBreadth_" + i).val() == "" ? 0 : $("#moveListBreadth_" + i).val();
            var height = $("#moveListHeight_" + i).val() == "" ? 0 : $("#moveListHeight_" + i).val();
            var quantityVal = $("#moveListQuantity_" + i).val();
            var volumeVal = $("#moveListUserVolume_" + i).val();
            var ans = 0;
            cuftVolume = 0;
            if (length != undefined && width != undefined && height != undefined) {
                ans = ((length * width * height) / 28316.8);
                cuftVolume = Math.ceil(cuftVolume + ans);
                $("#moveListVolume_" + i).text(Math.ceil(ans) + " Cuft");
            }

            if (quantityVal != "" && quantityVal != "0" && quantityVal != undefined) {
                if (quantityVal > 0) {
                    moveListQty = moveListQty + parseInt(quantityVal);
                    totalVolume = totalVolume + (cuftVolume * quantityVal);
                }
            }
            if (volumeVal != "" && volumeVal != "0" && volumeVal != undefined) {
                if (volumeVal > 0) {
                    moveListVolume = moveListVolume + parseInt(volumeVal);
                }
            }

        }
        $("#totalQuantity_heading3").text(moveListQty + " Quantity");
        $("#totalUserVolume_heading3").text(totalVolume + " Cuft");

        quantity = quantity + moveListQty;
        volume = volume + moveListVolume;
        totalVolume = totalVolume + qtyVolume;

        if (quantity > 0) { $("#totalQuantity").text(quantity + " Quantity"); }

        //if (volume > 0) { $("#totalUserVolume").text(volume + " User Volume"); }
        if (totalVolume > 0) { $("#totalUserVolume").text(totalVolume + " Cuft"); }
    }



    function ItemDetailsValidation() {
        isValid = false;
        $('.anythingElseBlock').each(function (e) {
            if ($("#moveListLength_" + e).val() == "" || $("#moveListBreadth_" + e).val() == "" || $("#moveListHeight_" + e).val() == "" || $("#moveListDesc_" + e).val() == "" || $("#moveListQuantity_" + e).val() == "" || $("#moveListLength_" + e).val() == "0" || $("#moveListBreadth_" + e).val() == "0" || $("#moveListHeight_" + e).val() == "0" || $("#moveListQuantity_" + e).val() == "0" ) {
                if ($("#moveListLength_" + e).val() != "" || $("#moveListLength_" + e).val() == "0" || $("#moveListBreadth_" + e).val() != "" || $("#moveListBreadth_" + e).val() == "0" || $("#moveListHeight_" + e).val() != "" || $("#moveListHeight_" + e).val() == "0" || $("#moveListDesc_" + e).val() != "" || $("#moveListQuantity_" + e).val() != "" || $("#moveListQuantity_" + e).val() == "0") {

                    if ($("#moveListDesc_" + e).val() == "") {
                        $("#moveListDescerror_" + e).text('Description is required');
                        $('#headingThree .btn').removeClass('collapsed');
                        $('#collapseThree').addClass('show');
                        isValid = true;
                    }
                    if ($("#moveListQuantity_" + e).val() == "" || $("#moveListQuantity_" + e).val() == "0") {
                        $("#moveListQuantityerror_" + e).text('Quantity is required');
                        $('#headingThree .btn').removeClass('collapsed');
                        $('#collapseThree').addClass('show');
                        isValid = true;
                    }
                    if ($("#moveListLength_" + e).val() == "" || $("#moveListLength_" + e).val() == "0") {
                        $("#moveListLengthError_" + e).text('Length is required');
                        $('#headingThree .btn').removeClass('collapsed');
                        $('#collapseThree').addClass('show');
                        isValid = true;
                    }
                    if ($("#moveListBreadth_" + e).val() == "" || $("#moveListBreadth_" + e).val() == "0") {
                        $("#moveListBreadthError_" + e).text('Width is required');
                        $('#headingThree .btn').removeClass('collapsed');
                        $('#collapseThree').addClass('show');
                        isValid = true;
                    }
                    if ($("#moveListHeight_" + e).val() == "" || $("#moveListHeight_" + e).val() == "0") {
                        $("#moveListHeightError_" + e).text('Height is required');
                        $('#headingThree .btn').removeClass('collapsed');
                        $('#collapseThree').addClass('show');
                        isValid = true;
                    }
                }
            }

            $('#moveListLength_' + e).change(function () {
                if ($('#moveListLength_' + e) != "") {
                    $('#moveListLengthError_' + e).text('');
                }
            });
            $('#moveListBreadth_' + e).change(function () {
                if ($('#moveListBreadth_' + e) != "") {
                    $('#moveListBreadthError_' + e).text('');
                }
            });
            $('#moveListHeight_' + e).change(function () {
                if ($('#moveListHeight_' + e) != "") {
                    $('#moveListHeightError_' + e).text('');
                }
            });
            $('#moveListDesc_' + e).change(function () {
                if ($('#moveListDesc_' + e) != "") {
                    $('#moveListDescerror_' + e).text('');
                }
            });
            $('#moveListQuantity_' + e).change(function () {
                if ($('#moveListQuantity_' + e) != "") {
                    $('#moveListQuantityerror_' + e).text('');
                }
            });
        })
    }
    @*function ShowPrevioueNextQuote(val) {
        var Id = $("#model_baggageQuote_Id").val();
        location.href = '@Url.Action("ShowPrevioueNextQuote", "Baggage")?Id=' + Id + '&isPrevOrNext=' + val;
    }*@
    function Changevolume(Id) {

        UpdateVolumeQtyLabel();

    }

    function isNumberKey(evt) {
        var charCode = (evt.which) ? evt.which : event.keyCode
        if (charCode > 32 && (charCode < 48 || charCode > 57))
            //if (charCode != 40 && charCode != 41) {
            return false;
        //}
        return true;
    }

</script>

