@model QuoteCalculator.Service.Models.EmailTemplateModel

@{
    Layout = "~/Views/Shared/_Layout.cshtml"; ;
}
<style>
    .panel-default {
        color: #333;
        background-color: #fff;
    }
</style>
<script src="~/Content/summernote/summernote.js"></script>
<link href="~/Content/summernote/summernote.css" rel="stylesheet" />
<div class="card">
    <div class="card-header">
        @*<h5 class="card-title mb-0"> Email Template</h5>*@
        @if (Model.id > 0)
        {
            <h5 class="card-title mb-0"> Edit Email Template </h5>
        }
        else
        {
            <h5 class="card-title mb-0">Add Email Template </h5>
        }
    </div>
    <div class="card-body">
        @using (Html.BeginForm("ManageTemplates", "EmailTemplate", FormMethod.Post, new { @class = "form-horizontal", @id = "form" }))
        {
            @Html.AntiForgeryToken()
            @Html.HiddenFor(x => x.id)
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="row">
                <div class="col-md-2">
                    <div class="form-group">
                        @Html.LabelFor(model => model.ServiceId, htmlAttributes: new { @class = "control-label" })
                    </div>
                </div>
                <div class="col-md-10">
                    <div class="form-group">
                        @Html.DropDownListFor(x => x.ServiceId, new SelectList(ViewBag.ServiceList, "Value", "Text"), "--- Select Service ---", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.ServiceId, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-2">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Subject, htmlAttributes: new { @class = "control-label" })
                    </div>
                </div>
                <div class="col-md-10">
                    <div class="form-group">
                        @Html.EditorFor(model => model.Subject, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })
                        @Html.ValidationMessageFor(model => model.Subject, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-2">
                    <div class="form-group">
                        @Html.LabelFor(model => model.HtmlContent, htmlAttributes: new { @class = "control-label" })
                    </div>
                </div>
                <div class="col-md-10">
                    <div class="form-group">
                        @Html.TextAreaFor(model => model.HtmlContent, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.HtmlContent, "", new { @class = "text-danger" })
                        <div id="summernoteValidation" class="text-danger" style="display: none;"></div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-12 text-right">
                    <input type="submit" id="submitButton" value="Save" class="btn btn-warning" />
                    <input type="button" value="Back" class="btn btn-warning" onclick="history.back();" />
                </div>
            </div>
        }
    </div>
</div>

<script type="text/javascript">
    $(document).ready(function () {
        $("#menu_EmailTemplate").addClass("active");
        $('#HtmlContent').summernote({
            height: 300,
            minHeight: null,
            maxHeight: null,
            focus: true,
            callbacks: {
                onChange: function (contents) {
                    var summernoteContent = $('#HtmlContent').summernote('code').replace(/<p>|<\/p>|<br>/g, '');
                    var hasNonBreakingSpaces = /^(&nbsp;\s*)+$/.test(summernoteContent);
                    if (summernoteContent == "" || summernoteContent == "<br>" || hasNonBreakingSpaces) {
                        $('#summernoteValidation').text('Html Content is required').show();
                    } else {
                        $('#summernoteValidation').hide();
                    }
                }
            }
        });
        $('#submitButton').click(function (e) {
            var summernoteContent = $('#HtmlContent').summernote('code').replace(/<p>|<\/p>|<br>/g, '');
            var hasNonBreakingSpaces = /^(&nbsp;\s*)+$/.test(summernoteContent);
            
            if ($('#form').valid()) {
                if (summernoteContent == "" || summernoteContent == "<br>" || hasNonBreakingSpaces) {
                    $('#summernoteValidation').text('Html Content is required').show();
                    e.preventDefault();
                } else {
                    $('#summernoteValidation').hide();
                    $('#form').submit();
                }
            }
            else {
                $('#form').submit();
                if (summernoteContent == "" || summernoteContent == "<br>" || hasNonBreakingSpaces) {
                    $('#summernoteValidation').text('Html Content is required').show();
                    e.preventDefault();
                } else {
                    $('#summernoteValidation').hide();
                }
            }
        });
    })
</script>
