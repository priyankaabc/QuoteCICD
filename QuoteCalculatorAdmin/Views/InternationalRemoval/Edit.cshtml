
﻿@using QuoteCalculator.Service.Models
@model QuoteCalculator.Service.Models.InternationalRemovalModel

@{
    ViewBag.Title = "Edit";
}
<div class="card mb-3">
    <div class="card-header d-flex justify-content-between  align-items-center">
        <h5 class="card-title mb-0">
            <i class="icon-info22 position-left icon-set"></i>International Removal Quote Details
        </h5>
        <button class="btn btn-warning" type="button" onclick="OpenQuoteDetailsWindow()">Quick Quote</button>
    </div>
    <div class="card-body">
        <div class="row">
            <div class="col-sm-12">
                @using (Html.BeginForm("AddEdit", "InternationalRemoval", FormMethod.Post, new { @class = "form-horizontal", @id = "internationalRemovalQuoteForm" }))
                {
                    @Html.HiddenFor(x => x.Id, new { @Name = "model.Id", @id = "Id" })
                    @Html.HiddenFor(x => x.QuickQuoteItemId, new { @Name = "model.QuickQuoteItemId", @id = "QuickQuoteItemId" })
                    @Html.HiddenFor(x => x.BranchId, new { @Name = "model.BranchId", @id = "BranchId" })
                    @Html.HiddenFor(x => x.IsDelete, new { @id = "IsDelete" })
                    <div class="row">
                        <div class="col-md-12 col-lg-12 col-xs-12 col-sm-12">
                            <div class="panel panel-white bg-white p-4 mb-2">
                                <div class="panel-heading">
                                    <h6 class="panel-title">
                                        <i class="icon-truck position-left icon-set"></i> <b class="text-bold pt-0" style="text-transform:uppercase;">Move Details</b>
                                    </h6>
                                </div>
                                <div class="panel-body">
                                    <div class="row">
                                        <div class="col-lg-4 col-md-6 col-12 form-group">
                                            @Html.LabelFor(m => m.FromCountryName)
                                            @Html.TextBoxFor(m => m.FromCountryName, new { @class = "form-control", @readonly = "readonly", @tabIndex = 1, @Name = "model.FromCountryName" })
                                            <span class="field-validation-valid text-danger" data-valmsg-for="model.FromCountryName" data-valmsg-replace="true"></span>
                                        </div>
                                        <div class="col-lg-4 col-md-6 col-12 form-group">
                                            @Html.LabelFor(m => m.PostCode)
                                            @Html.TextBoxFor(m => m.PostCode, new { @class = "form-control", @tabIndex = 2, @onchange = "ValidatePostcode()", @Name = "model.PostCode" })
                                            <span class="field-validation-valid text-danger" data-valmsg-for="model.PostCode" data-valmsg-replace="true"></span>
                                            <span id="model_ToPostCode_error" class="text-danger"></span>
                                        </div>
                                        <div class="col-lg-4 col-md-6 col-12 form-group">
                                            @Html.LabelFor(m => m.EstimatedMoveDate)
                                            @Html.TextBoxFor(m => m.EstimatedMoveDate, "{0:yyyy-MM-dd}", new { @type = "date", @class = "form-control", @tabIndex = 3, @Name = "model.EstimatedMoveDate", @min = DateTime.Now.ToString("yyyy-MM-dd") })
                                            @*<div class="input-group date" data-date-format="dd-mm-yyyy">

                                                    @Html.TextBoxFor(m => m.EstimatedMoveDate, "{0:yyyy-MM-dd}", new { @class = "form-control", @type = "text", @placeholder = "DD-MM-YYYY", @autocomplete = "off", @Name = "model.EstimatedMoveDate" })
                                                    <span class="input-group-addon"><i class="fa fa-calendar"></i></span>
                                                 
 
                 
                                             </div>*@ 

                                            <span class="field-validation-valid text-danger" data-valmsg-for="model.EstimatedMoveDate" data-valmsg-replace="true"></span>
                                        </div>
                                       
                                    </div>
                                    <div class="row">
                                        <div class="col-lg-4 col-md-6 col-12 form-group">
                                            <div>
                                                @Html.LabelFor(m => m.ToCountryCode)
                                                @Html.DropDownListFor(m => m.ToCountryCode, new SelectList((IEnumerable<SelectListItem>)ViewBag.CountryList, "Value", "Text"), "-- Select Field --", new { @class = "form-control", @tabIndex = 4, @Name = "model.ToCountryCode" })
                                                <span class="field-validation-valid text-danger" data-valmsg-for="model.ToCountryCode" data-valmsg-replace="true"></span>
                                            </div>
                                            @*<span class="field-validation-error" data-valmsg-for="ToCountry" data-valmsg-replace="true"><span id="ToCountry-error" class=""></span></span>*@
                                        </div>
                                        <div class="col-lg-4 col-md-6 col-12 form-group">
                                            @Html.LabelFor(m => m.CityName)
                                            @Html.DropDownListFor(m => m.CityName, new List<SelectListItem>(), "-- Select Field --", new { @class = "form-control", @tabIndex = 5, @Name = "model.CityName" })
                                            <span class="field-validation-valid text-danger" data-valmsg-for="model.CityName" data-valmsg-replace="true"></span>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="panel panel-white bg-white p-4 mb-2">
                                <div class="panel-heading">
                                    <h6 class="panel-title">
                                        <i class="icon-user position-left icon-set"></i> <b class="text-bold pt-0" style="text-transform:uppercase;">Personal Details</b>
                                    </h6>
                                </div>
                                <div class="panel-body">
                                    <div class="row">
                                        <div class="col-lg-4 col-md-6 col-12 form-group">
                                            @Html.LabelFor(m => m.TitleId)
                                            @Html.DropDownListFor(x => x.TitleId, new SelectList(ViewBag.TitleList, "Value", "Text"), "-- Select Field --", new { @class = "custom-selection form-control", @Name = "model.TitleId", @tabIndex = 6 })
                                            <span class="field-validation-valid text-danger" data-valmsg-for="model.TitleId" data-valmsg-replace="true"></span>
                                        </div>
                                        <div class="col-lg-4 col-md-6 col-12 form-group">
                                            @Html.LabelFor(m => m.Firstname)
                                            @Html.TextBoxFor(m => m.Firstname, new { @class = "form-control", @tabIndex = 7, @Name = "model.Firstname" })
                                            <span class="field-validation-valid text-danger" data-valmsg-for="model.Firstname" data-valmsg-replace="true"></span>
                                        </div>
                                        <div class="col-lg-4 col-md-6 col-12 form-group">
                                            @Html.LabelFor(m => m.Lastname)
                                            @Html.TextBoxFor(m => m.Lastname, new { @class = "form-control", @tabIndex = 8, @Name = "model.Lastname" })
                                            <span class="field-validation-valid text-danger" data-valmsg-for="model.Lastname" data-valmsg-replace="true"></span>
                                        </div>
                                    </div>

                                    <div class="row">
                                        <div class="col-lg-4 col-md-6 col-12 form-group">
                                            @Html.LabelFor(m => m.Email)
                                            @Html.TextBoxFor(m => m.Email, new { @class = "form-control", @tabIndex = 9, @Name = "model.Email" })
                                            <span class="field-validation-valid text-danger" data-valmsg-for="model.Email" data-valmsg-replace="true"></span>
                                        </div>

                                        <div class="col-lg-4 col-md-6 col-12 form-group">
                                            @Html.LabelFor(m => m.CountryCode)
                                            @Html.DropDownListFor(m => m.CountryCode, new SelectList((IEnumerable<CommonModel>)ViewBag.CountryCodeList, "Value", "Text"), "-- Select Field --", new { @class = "form-control", @tabIndex = 10, @Name = "model.CountryCode" })
                                            <span class="field-validation-valid text-danger" data-valmsg-for="model.CountryCode" data-valmsg-replace="true"></span>
                                        </div>

                                        <div class="col-lg-4 col-md-6 col-12 form-group">
                                            @Html.LabelFor(m => m.Telephone)
                                            @Html.TextBoxFor(m => m.Telephone, new { @class = "form-control", @tabIndex = 11, @Name = "model.Telephone" })
                                            <span class="field-validation-valid text-danger" data-valmsg-for="model.Telephone" data-valmsg-replace="true"></span>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-lg-4 col-md-6 col-12 form-group">
                                            <label>Sales Rep</label>
                                            @Html.DropDownListFor(m => m.SalesRepCode, new SelectList((IEnumerable<CommonModel>)ViewBag.SalesRepCodeList, "Value", "Text"), "-- Select Field --", new { @class = "form-control", @tabIndex = 12, @Name = "model.SalesRepCode" })
                                            <span class="field-validation-valid text-danger" data-valmsg-for="model.SalesRepCode" data-valmsg-replace="true"></span>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="panel panel-white bg-white p-4 mb-2">
                                <div class="panel-heading">
                                    <h6 class="panel-title">
                                        <i class="icon-bubble-lines4  position-left icon-set"></i> <b class="text-bold pt-0" style="text-transform:uppercase;">Selection Details</b>
                                    </h6>
                                </div>
                                <div class="panel-body">
                                    <div class="row">
                                        <p class="mb-0">
                                            <div class="col-lg-4 col-md-6 col-12">
                                                <span class="custom-control custom-radio d-inline-block pr-3">
                                                    @Html.RadioButtonFor(m => m.SelectionType, "Home Consultation", new { @Name = "model.SelectionType", id = "radioHomeConsultation", @class = "custom-control-input form-control" })
                                                    <label class="custom-control-label" for="radioHomeConsultation">Home Consultation Or Service</label>
                                                </span>
                                            </div>
                                            <div class="col-lg-4 col-md-6 col-12">
                                                <span class="custom-control custom-radio d-inline-block">
                                                    @Html.RadioButtonFor(m => m.SelectionType, "Home Video Survey", new { @Name = "model.SelectionType", id = "radioHomeVideoSurvey", @class = "custom-control-input form-control" })
                                                    <label class="custom-control-label" for="radioHomeVideoSurvey">Home Video Survey</label>
                                                </span>
                                            </div>
                                            <div class="col-lg-4 col-md-6 col-12">
                                                <span class="custom-control custom-radio d-inline-block">
                                                    @Html.RadioButtonFor(m => m.SelectionType, "Quick Online Quote", new { @Name = "model.SelectionType", id = "radioQuickOnlineQuote", @class = "custom-control-input form-control" })
                                                    <label class="custom-control-label" for="radioQuickOnlineQuote">Quick Online Quote</label>
                                                </span>
                                            </div>
                                        </p>
                                        @*<div class="col-lg-4 col-md-4 col-xs-12 col-sm-6 form-group mt-15">
                        @Html.LabelFor(m => m.HomeConsultationOrService)
                        @(Html.Kendo().CheckBoxFor(m => m.HomeConsultationOrService).Label(" ").HtmlAttributes(new { style = "width:100%;", @tabIndex = 13 }))
                        @Html.ValidationMessageFor(m => m.HomeConsultationOrService)
                    </div>

                    <div class="col-lg-4 col-md-4 col-xs-12 col-sm-6 form-group mt-15">
                        @Html.LabelFor(m => m.HomeVideoSurvery)
                        @(Html.Kendo().CheckBoxFor(m => m.HomeVideoSurvery).Label(" ").HtmlAttributes(new { style = "width:100%;", @tabIndex = 14 }))
                        @Html.ValidationMessageFor(m => m.HomeVideoSurvery)
                    </div>

                    <div class="col-lg-4 col-md-4 col-xs-12 col-sm-6 form-group mt-15">
                        @Html.LabelFor(m => m.QuickOnlineQuote)
                        @(Html.Kendo().CheckBoxFor(m => m.QuickOnlineQuote).Label(" ").HtmlAttributes(new { style = "width:100%;", @tabIndex = 15 }))
                        @Html.ValidationMessageFor(m => m.QuickOnlineQuote)
                    </div>*@
                                        @*@if (Model.HomeConsultationOrService == true)
                    {
                        <div class="col-lg-4 col-md-4 col-xs-12 col-sm-6 form-group">
                            @Html.LabelFor(m => m.HomeConsultationDateTime)
                            @(Html.Kendo().DateTimePickerFor(m => m.HomeConsultationDateTime)
                                                                                              .HtmlAttributes(new { @style = "width: 100%", @TabIndex = 16 })
                                        .ParseFormats(new string[] { "dd-MM-yyyy" })
                            )
                            @Html.ValidationMessageFor(m => m.HomeConsultationDateTime)
                        </div>
                    }
                    @if (Model.HomeVideoSurvery == true)
                    {
                        <div class="col-lg-4 col-md-4 col-xs-12 col-sm-6 form-group">
                            @Html.LabelFor(m => m.VideoSurveyAppointmentTime)
                            @(Html.Kendo().DateTimePickerFor(m => m.VideoSurveyAppointmentTime)
                                                                                                  .HtmlAttributes(new { @style = "width: 100%", @TabIndex = 16 })
                                                                                                  .ParseFormats(new string[] { "dd-MM-yyyy" })
                            )
                            @Html.ValidationMessageFor(m => m.VideoSurveyAppointmentTime)
                        </div>
                        <div class="col-lg-4 col-md-4 col-xs-12 col-sm-6 form-group">
                            @Html.LabelFor(m => m.dayScheduleId)
                            @(Html.Kendo().ComboBoxFor(m => m.dayScheduleId)
                                                   .Value(Model.dayScheduleId == 0 ? string.Empty : Model.dayScheduleId.ToString())
                                                   .DataTextField("Name")
                                                   .DataValueField("Id")
                                                   .DataSource(source => source.Read(read => read.Action("GetDayScheduleList", "Common")))
                                                   .Suggest(true)
                                                   .Filter(FilterType.Contains)
                                                   .HtmlAttributes(new { @style = "width:100%;", @tabIndex = 1, @data_value_primitive = "true" })
                                                   .Placeholder(CommonHelper.PleaseSelect)
                            )
                            @Html.ValidationMessageFor(m => m.TitleId)
                        </div>
                    }*@
                                    </div>
                                    <div class="row HomeConsultation mt-4">
                                        <div class="col-lg-3 col-md-6 col-12"><h5 class="my-4" style="font-size: 1.3rem;"><b><span class="text-success">Select a preferred date of survey</span></b></h5></div>
                                        <div class="col-lg-3 col-md-6 col-12 form-group mt-3">
                                            @Html.TextBoxFor(m => m.HomeConsultationDateTime, "{0:yyyy-MM-dd}", new { @type = "date", @class = "form-control", @Name = "model.HomeConsultationDateTime" })
                                            <span class="field-validation-valid text-danger" data-valmsg-for="model.HomeConsultationDateTime" data-valmsg-replace="true"></span>
                                        </div>
                                    </div>
                                    <div class="row HomeVideoSurvey mt-4">
                                        <div class="col-lg-3 col-md-6 col-12 form-group">
                                            @Html.DropDownListFor(m => m.dayScheduleId, new SelectList(ViewBag.DayScheduleList, "Value", "Text"), "-- Select Field --", new { @class = "form-control", @Name = "model.dayScheduleId" })
                                            <span class="field-validation-valid text-danger" data-valmsg-for="model.dayScheduleId" data-valmsg-replace="true"></span>
                                        </div>
                                        <div class="col-lg-3 col-md-6 col-12 form-group">
                                            @Html.TextBoxFor(m => m.VideoSurveyAppointmentTime, "{0:yyyy-MM-dd}", new { @type = "date", @class = "form-control", @Name = "model.VideoSurveyAppointmentTime", @min = DateTime.Now.ToString("yyyy-MM-dd") })
                                            <span class="field-validation-valid text-danger" data-valmsg-for="model.VideoSurveyAppointmentTime" data-valmsg-replace="true"></span>
                                        </div>
                                    </div>

                                    <div class="row QuickQuoteItems mt-4">
                                        <div class="col-12">
                                            <div class="border-top border-bottom pt-4">
                                                <h5 class="text-success mb-4"><b>Choose your property size or select the number of items you want to move:</b></h5>
                                                <div class="carton-row justify-content-md-start row">
                                                    @if (Model.items.Count > 0)
                                                    {
                                                        foreach (var item in Model.items)
                                                        {
                                                            <div class="col-lg-2 col-md-4 col-12 mb-5">
                                                                <div class="carton-box property-size text-center d-flex flex-column">
                                                                    <p class="mb-2"><b>@item.Title</b></p>
                                                                    <div class="flex-1 my-3 d-flex justify-content-center align-items-center">
                                                                        <img src="~/Content/@item.image" alt="img" />
                                                                    </div>
                                                                    <p class="mb-0 mt-2"><b>@item.Cuft cu ft</b></p>
                                                                    <p>@item.Ftcontainer container</p>
                                                                    <button type="button" id="@item.ItemId" class="btn btn-outline-secondary" onclick="SelectItem(@item.ItemId)">Select</button>
                                                                </div>
                                                            </div>
                                                        }
                                                    }
                                                </div>
                                            </div>
                                        </div>

                                        <div class="col-12 custom-inputs">
                                            <div class="my-4">
                                                <h5><b><span class="text-success">None of the above? Customize it:</span></b></h5>
                                                <b>Do you know your volume or have you already been quoted a volume? Tell us below</b>
                                            </div>
                                            <div class="row">
                                                <div class="col-lg-2 col-md-6 col-12 form-group">
                                                    @Html.Label("CU ft")
                                                    @Html.TextBoxFor(m => m.Cuft, new { @class = "form-control", @placeholder = "Type Here", @type = "number", @min = 0, @Name = "model.Cuft" })
                                                    <span class="field-validation-valid text-danger" data-valmsg-for="model.Cuft" data-valmsg-replace="true"></span>
                                                </div>
                                            </div>
                                        </div>

                                        <div class="col-12">
                                            <div class="border-top mt-4">
                                                <h5 class="my-4"><b><span class="text-success">Any special requirements? Let us know:</span></b></h5>
                                                @Html.TextAreaFor(m => m.SpecialRequirements, 3, 5, new { @class = "form-control", @placeholder = "Your message here (max 200 ch)", @Name = "model.SpecialRequirements" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-md-12 mt-3">
                                            <div class="d-flex align-items-center justify-content-between">
                                                <a href="@Url.Action("Index", "InternationalRemoval")" class="btn btn-cancel">Back</a>
                                                <button class="btn btn-warning" type="submit" onclick="return checkvalidation()">Save</button>
                                            </div>

                                        </div>
                                    </div>
                                    
                                </div>
                            </div>

                            @*@if (Model.QuickOnlineQuote == true)
        {
            <div class="panel panel-white">
                <div class="panel-heading">
                    <h6 class="panel-title">
                        <i class="icon-bubble-lines4 position-left"></i> <b class="text-bold pt-0" style="text-transform:uppercase;">Items Details</b>
                    </h6>
                </div>
                <div class="panel-body">
                    @(Html.Kendo().Grid<tbl_AdditionalQuickQuoteItems>()
                       .Name("AdditionalQuickQuoteItemsGrid")
                       .Columns(columns =>
                       {
                           columns.Bound(m => m.Beds);
                           columns.Bound(m => m.Cuft);
                           columns.Bound(m => m.Ftcontainer).Title("Ft Container");
                           columns.Bound(m => m.SpecialRequirements);
                       })
                       .Pageable(x =>
                       {
                           x.Refresh(true);
                           x.PageSizes(CommonHelper.PageSizes);
                       })
                       .NoRecords()
                       .DataSource(dataSource => dataSource
                           .Ajax()
                           .PageSize(CommonHelper.PazeSize)
                           .Model(model => model.Id(d => d.ItemId))
                           .Events(events => events.Error("onError(\"AdditionalQuickQuoteItemsGrid\")"))
                           .Read(read => read.Action("KendoItemRead", "InternationalRemoval").Data("onAdditionalData"))
                       ))
                </div>
            </div>
        }*@
                        </div>
                    </div>
                }
                @*@(Html.Kendo().Window()
                    .Name("quoteDetailsWindow")
                    .Visible(false)
                    .Draggable(true)
                    .Modal(true)
                    .Width(650)
                    .Height(380))*@
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="QuoteDetailPopup" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">

        <div class="modal-dialog modal-dialog-centered modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <span class="h4 mb-0" id="myModalLabel">Quick Quote Detail</span>
                    <button type="button" class="close" data-dismiss="modal">
                        <span aria-hidden="true">&times;</span><span class="sr-only">Close</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div id="divQuoteDetailPopup">
                    </div>
                </div>
            </div>
        </div>
    
</div>

<script>
    $(document).ready(function () {
        $("#menu_InternationalRemoval").addClass("active");
        $("#menu_QuoteDetails").children().removeClass("collapsed");
        $("#menu_QuoteDetails").children().addClass("show");
        $("#menu_QuoteDetails").addClass("active");
        OnToCountryCodeChange();
        OnRadioButtonChange();
        if ($("#Id").val() > 0) {
            let QuickQuoteItem = $("#QuickQuoteItemId").val();
            setTimeout(function () {
                if (QuickQuoteItem > 0) {
                    $('#QuickQuoteItemId').val(QuickQuoteItem);
                    $('#Beds, #Cuft, #Ftcontainer').attr("disabled", "disabled");
                    $("#" + QuickQuoteItem).removeClass("btn btn-outline-secondary");
                    $("#" + QuickQuoteItem).addClass("btn btn-success btn-md min-auto");
                    $("#" + QuickQuoteItem).html("<i class='icon-check2 font-lg'></i> Selected");
                    $("#" + QuickQuoteItem).addClass("btn btn-outline-secondary");
                    $("#Cuft").val("");
                }
            }, 200);
        }
       if ($("#IsDelete").val() == "True") {
            QuickQuotePopup();
        }
    });

    $("input:radio[name='model.SelectionType']").change(function () {
        OnRadioButtonChange();
    });
    function OnRadioButtonChange() {
        const type = $('input[name="model.SelectionType"]:checked', '#internationalRemovalQuoteForm').val();
        if (type == "Home Consultation") {
            $(".HomeConsultation").show();
            $(".HomeVideoSurvey, .QuickQuoteItems").hide();
            $('#VideoSurveyAppointmentTime, #dayScheduleId, #Cuft').val("");
            $("#HomeConsultationDateTime").attr("disabled", false);
            $("#dayScheduleId, #VideoSurveyAppointmentTime, #Cuft").attr("disabled", "disabled");
        }
        else if (type == "Home Video Survey") {
            $('.HomeVideoSurvey').show();
            $('.HomeConsultation, .QuickQuoteItems').hide();
            $('#HomeConsultationDateTime, #Cuft').val('');
            $('#dayScheduleId, #VideoSurveyAppointmentTime').attr("disabled", false);
            $("#HomeConsultationDateTime, #Cuft").attr("disabled", "disabled");
        }
        else {
            $(".HomeVideoSurvey, .HomeConsultation").hide();
            $(".QuickQuoteItems").show();
            $('#HomeConsultationDateTime, #dayScheduleId, #VideoSurveyAppointmentTime').val("");
            $("#VideoSurveyAppointmentTime, #dayScheduleId, #HomeConsultationDateTime").attr("disabled", "disabled");
            $("#Cuft").attr("disabled", false);
        }
        $('.HomeVideoSurvey .field-validation-error, .HomeConsultation .field-validation-error').empty();
    }
    $('#ToCountryCode').change(function () {
        OnToCountryCodeChange();
    });
    function OnToCountryCodeChange() {
        const countryId = $('#ToCountryCode').val();
         $.ajax({
             url: '@Url.Action("GetCityListByCountryId", "Baggage")',
             async: false,
             type: 'POST',
             data: { 'countryCode': countryId },
             success: function (data) {
                 const cityName = '@Model.CityName';
                 $("#CityName").html("");
                 let ToCountryDDL = "<select'>";
                 for (var i = 0; i < data.length; i++) {
                     if (cityName != null && data[i].CityName == cityName) {
                         ToCountryDDL = ToCountryDDL + '<option value = "' + data[i].CityName + '" Selected>' + data[i].CityName + '</option>';
                     } else {
                         ToCountryDDL = ToCountryDDL + '<option value = "' + data[i].CityName + '">' + data[i].CityName + '</option>';
                     }
                 }
                 ToCountryDDL = ToCountryDDL + '</select>';
                 $("#CityName").html(ToCountryDDL);
             },
         })
    }

    function SelectItem(id) {
        if (document.getElementById("model.Cuft_validationMessage") != null) {
            document.getElementById("model.Cuft_validationMessage").style.display = "none";
        }
        var con = $("#" + id).hasClass("btn-success");
        if (!con) {
            var ItemId = $("#QuickQuoteItemId").val();
            if (ItemId != 0 && ItemId != id) {
                $("#QuickQuoteItemId").val(id);
                $("#Beds, #Cuft, #Ftcontainer").attr("disabled", "disabled");
                //$("#Cuft").attr("disabled", "disabled");
                //$("#Ftcontainer").attr("disabled", "disabled");
                $("#" + id).removeClass("btn btn-outline-secondary");
                $("#" + id).addClass("btn btn-success btn-md min-auto");
                $("#" + id).html("<i class='icon-check2 font-lg'></i> Selected");
                $("#" + ItemId).removeClass("btn btn-success btn-md min-auto");
                $("#" + ItemId).addClass("btn btn-outline-secondary");
                $("#" + ItemId).html("Select");
                $("#Cuft").val("");
            }
            else {
                $("#QuickQuoteItemId").val(id);
                $("#Beds, #Cuft, #Ftcontainer").attr("disabled", "disabled");
                //$("#Cuft").attr("disabled", "disabled");
                //$("#Ftcontainer").attr("disabled", "disabled");
                $("#" + id).removeClass("btn btn-outline-secondary");
                $("#" + id).addClass("btn btn-success btn-md min-auto");
                $("#" + id).html("<i class='icon-check2 font-lg'></i> Selected");
                $("#Cuft").val("");
            }
        }
        else {
            $("#" + id).removeClass("btn btn-success btn-md min-auto");
            $("#" + id).addClass("btn btn-outline-secondary");
            $("#" + id).html("Select");
            $("#Beds, #Cuft, #Ftcontainer").removeAttr("disabled");
            //$("#Cuft").removeAttr("disabled");
            //$("#Ftcontainer").removeAttr("disabled");
            $("#QuickQuoteItemId").val("");
        }
    }

    function checkvalidation() {
        if ($('#model_ToPostCode_error').text()) {
            return false;
        }
        //if ($("#internationalRemovalQuoteForm").kendoValidator().data("kendoValidator").validate() != true) {
        //    return false;
        //}
        if (!$('#internationalRemovalQuoteForm').valid()) {
            return false;
        }
    }

    //function getToCountryCode() {
    //    return {
    //        countryCode: $('#model_ToCountryCode').data("kendoDropDownList").value()
    //    };
    //}
    @*$("#model_ToCountryCode").change(function () {
        var countryId = $('#model_ToCountryCode').data("kendoDropDownList").value();
        $.ajax({
            url: '@Url.Action("GetCityListByCountryId", "Baggage")',
            async: false,
            type: 'POST',
            dataType: "json",
            data: { 'countryCode': countryId },
            success: function (data) {
                var ddl = $("#model_CityName").data("kendoDropDownList");
                ddl.dataSource.data().empty();

                $("#model_CityName").html("");
                $.each(data, function (i, data) {
                    $("#model_CityName").data("kendoDropDownList")
                        .dataSource.add({ "country_code": data.country_code, "CityName": data.CityName });
                });
            },
            error: function(e) {
                console.log(e);
            }
        })
    });*@

    function ValidatePostcode() {
        const topostCode = $("#PostCode").val();
        if (topostCode && topostCode.trim() != '') {
            const IsValidPostCode = CheckValidPostCode(topostCode);
            if (IsValidPostCode) {
                $("#BranchId").val();
                $('#model_ToPostCode_error').text('');
            }
            else {
                $('#model_ToPostCode_error').text('Please enter valid post code.');
            }
             @*$.ajax({
                 url: '@Url.Action("CheckValidPostCode", "Baggage")',
                 async: false,
                 type: 'POST',
                 data: { 'postCode': topostCode },
                 success: function (data) {
                     if (data != false) {
                         $("#BranchId").val(data);
                         $('#model_ToPostCode_error').text('');
                     }
                     else {
                         $('#model_ToPostCode_error').text('Please enter valid post code.');
                         //return false;
                     }
                 } 
             });*@
        }
    }

    function OpenQuoteDetailsWindow() {
        if ($('#internationalRemovalQuoteForm').valid()) {
            let SelectedType = $('input[name="model.SelectionType"]:checked', '#internationalRemovalQuoteForm').val();
            if (SelectedType == "Quick Online Quote") {
                let data = $('#internationalRemovalQuoteForm').serializeArray();
                data.push({ name: 'isInquiry', value: true });
                $.ajax({
                    url: '@Url.Action("AddEdit", "InternationalRemoval")',
                    async: false,
                    type: 'POST',
                    data: data,
                    success: function (data) {
                        if (data.data != "") {
                            if (data.data > 0) {
                                window.location.href = "/InternationalRemoval/Edit?Id=" + data.data;
                            } else {
                                const errormessage = '@TempData[CustomEnums.NotifyType.Error.GetDescription()]';
                                toastr.error("Please select at least one item");
                            }
                        }
                        else {
                            const errormessage = '@TempData[CustomEnums.NotifyType.Error.GetDescription()]';
                            toastr.error("Please select at least one item");
                        }
                    },
                });
            }
            else {
                toastr.error("Please select Quick Online Quote");
            }
        }
    }

    function isNumberKey(evt) {
        var charCode = (evt.which) ? evt.which : event.keyCode
        if (charCode > 32 && (charCode < 48 || charCode > 57))
            //if (charCode != 40 && charCode != 41) {
            return false;
        //}
        return true;
    }

    function QuickQuotePopup() {
        $.ajax({
            url: '@Url.Action("QuickOnlineQuoteDetail", "InternationalRemoval")?Id=' + $("#Id").val() + '&IsQuoteIfo=true&IsInquiry=true',
            async: false,
            type: 'GET',
            success: function (data) {
                if (data) {
                    $('#QuoteDetailPopup').modal('show');
                    $('#divQuoteDetailPopup').html(data);
                }
            }
        });

        @*const urllink = '@Url.Action("QuickOnlineQuoteDetail", "InternationalRemoval")?Id=' + $("#Id").val() + '&IsQuoteIfo=true&IsInquiry=true';
        var window = $("#quoteDetailsWindow").data("kendoWindow");
        window.content("");
        window.title("Quote Details");
        window.refresh({
            url: urllink
        });
        window.center();
        setTimeout(
            function () { window.open(); }, 500
        );
        window.open();*@
    }
</script>
<style>
    .carton-box {
        border: solid 1px #d6d6d6 !important;
        border-radius: 13px !important;
        padding: 12px 15px 15px 15px !important;
        width: 100% !important;
        position: relative !important;
        height: 100% !important;
        min-height: 70px !important;
        text-align: center !important;
        display: flex !important;
        flex-wrap: wrap !important;
        justify-content: space-between !important;
        align-items: center !important;
        flex-direction: column !important;
    }

    .btn-success-600 {
        background: #95ce22;
        color: #fff;
    }

        .btn-success-600:hover, .btn-success-600:focus {
            background: #82b41c;
            color: #fff;
        }

    #QuoteDetailPopup .modal-dialog {
        min-width: 650px;
    }
</style>