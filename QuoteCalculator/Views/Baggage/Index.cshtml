@using QuoteCalculator.Data
@model tbl_baggageQuote
@{
    ViewBag.Title = "Index";
}
<style>
    .input-validation-error {
        border: 1px solid #f00 !important;
    }

    .field-validation-error {
        color: #f00 !important;
    }
</style>
@*<div class="page-breadcrumb text-center font-nr mb-2">
        <ul>
            <li><a href="#">Home</a></li>
            <li><a href="#">Baggage Shipping</a></li>
        </ul>
    </div>*@
<h1 class="text-primary text-center mb-4"><b>Your move details</b></h1>
<div class="row justify-content-center">
    <div class="col-md-9 my-4">
        <ul class="progress-steps">
            <li class="active">First Step</li>
            <li>Second Step</li>
            <li>Third Step</li>
        </ul>
    </div>
    <div class="col-12">
        @using (Html.BeginForm("Index", "Baggage", FormMethod.Post, new { @class = "custom-inputs", @autocomplete = "off" }))
        {
            <div class="row">
                <div class="col-12 my-4">
                    <span class="text-warning"><b>Fields marked with * are mandatory</b></span>
                </div>
                <div class="col-12">
                    @*<form class="custom-inputs">*@
                    <div class="row">
                        <div class="col-md-6 form-group">
                            <div class="row">
                                @Html.HiddenFor(m => m.BranchId)
                                @Html.HiddenFor(m => m.Id)
                                <div class="col-auto small-fixed-input">
                                    @Html.LabelFor(x => x.TitleId)
                                    @Html.DropDownListFor(x => x.TitleId, new SelectList(ViewBag.TitleList, "Id", "TitleName"), "- Select -", new { @class = "custom-selection form-control", @placeholder = "Type Here" })
                                    <p>
                                        <span class="field-validation-error" data-valmsg-for="TitleId" data-valmsg-replace="true"><span id="TitleId-error" class=""></span></span>
                                    </p>
                                </div>
                                <div class="col">
                                    @Html.LabelFor(x => x.Firstname)
                                    @Html.TextBoxFor(x => x.Firstname, new { @class = "form-control", @placeholder = "Type Here" })
                                    @Html.ValidationMessageFor(m => m.Firstname)
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6 form-group">
                            @Html.LabelFor(x => x.Lastname)
                            @Html.TextBoxFor(x => x.Lastname, new { @class = "form-control", @placeholder = "Type Here" })
                            @Html.ValidationMessageFor(m => m.Lastname)
                        </div>
                        <div class="col-md-6 form-group">
                            @Html.LabelFor(x => x.Email)
                            @Html.TextBoxFor(x => x.Email, new { @class = "form-control", @placeholder = "Type Here" })
                            @Html.ValidationMessageFor(m => m.Email)
                        </div>
                        <div class="col-md-6 form-group">
                            <div class="row">
                                <div class="col-6 form-group">
                                    @Html.LabelFor(x => x.CountryCode)
                                    @Html.DropDownListFor(x => x.CountryCode , new SelectList(
                                                            (ViewBag.CountryCodeList as IEnumerable<tbl_CountryCode>)
                                                            .Select(
                                                                a=>new { Id =a.CountryCode, CountryCode = a.CountryName + " (" + a.CountryCode + ")"}
                                                            ),"Id","CountryCode"), new { @class = "form-control" })
                                </div>
                                <div class="col form-group">
                                    @Html.LabelFor(x => x.Telephone)
                                    @Html.TextBoxFor(x => x.Telephone, new { @class = "form-control", @placeholder = "Type Here", @onkeypress = "return isNumberKey(event)", @maxlength = "20" })
                                    @Html.ValidationMessageFor(m => m.Telephone)
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="row">
                                <div class="col-12 form-group">
                                    <div>
                                        @Html.LabelFor(m => m.FromCountry)
                                        @Html.DropDownListFor(x => x.FromCountry, new SelectList(ViewBag.FromCountryList, "country_code", "country"), new { @class = "form-control", @id = "FromCountry" })
                                        @*<input type="text" class="form-control valid" value="United Kingdom" aria-invalid="false" readonly="">*@
                                    </div>
                                    <span class="field-validation-error" data-valmsg-for="FromCountry" data-valmsg-replace="true"><span id="FromCountry-error" class=""></span></span>
                                </div>
                                <div class="col-12 form-group" id="FromCityDiv">
                                    @Html.LabelFor(m => m.FromCity)
                                    @*<select id="MovingFromCityId" name="FromCity" class="custom-selection form-control"></select>*@
                                    @Html.DropDownListFor(x => x.FromCity, new List<SelectListItem>(), new { @class = " form-control", @placeholder = "Type Here" })
                                </div>
                                <div class="col-12 form-group" id="FromPostCode">
                                    <div>
                                        @Html.LabelFor(x => x.PostCode)
                                        @Html.TextBoxFor(x => x.PostCode, new { @class = "form-control", @onblur = "CheckValidPostCode(1)", @id = "PostCode" })
                                    </div>
                                    <span class="field-validation-error" data-valmsg-for="PostCode" data-valmsg-replace="true"><span id="PostCode-error" class=""></span></span>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="row">
                                <div class="col-12 form-group">
                                    <div>
                                        @Html.LabelFor(m => m.ToCountry)
                                        @Html.DropDownListFor(x => x.ToCountry, new SelectList(ViewBag.CountryList, "country_code", "country"), "-- Select --", new { @class = "form-control", @id = "ToCountry" })
                                        @*@Html.ValidationMessageFor(m => m.ToCountry)*@
                                    </div>
                                    <span class="field-validation-error" data-valmsg-for="ToCountry" data-valmsg-replace="true"><span id="ToCountry-error" class=""></span></span>
                                </div>
                                <div class="col-12 form-group" id="MovingToCityId">
                                    @Html.LabelFor(m => m.CityName)
                                    @*<select id="MovingToCityId" name="CityName" class="custom-selection form-control"></select>*@
                                    @Html.DropDownListFor(x => x.CityName, new List<SelectListItem>(), new { @class = " form-control", @placeholder = "Type Here" })
                                </div>
                                <div class="col-12 form-group" id="ToPostCode">
                                    <div>
                                        @Html.LabelFor(x => x.ToPostCode)
                                        @Html.TextBoxFor(x => x.ToPostCode, new { @class = "form-control", @onblur = "CheckValidPostCode(2)", @id = "ToPostalCode" })
                                    </div>
                                    <span class="field-validation-error" data-valmsg-for="PostCode" data-valmsg-replace="true"><span id="ToPostCode-error" class=""></span></span>
                                </div>
                                <div class="col-10 col-md-8 form-group">
                                    @Html.LabelFor(x => x.EstimatedMoveDate)
                                    <div class="input-group date" id='EstimatedMoveDate'>
                                        <input type="text" name="EstimatedMoveDate" class="form-control" placeholder="dd/mm/yyyy">
                                        <div class="input-group-append input-group-addon">
                                            <span class="input-group-text"><i class="bx bx-calendar-alt font-md"></i></span>
                                        </div>
                                    </div>
                                    @*@Html.ValidationMessageFor(m => m.EstimatedMoveDate)*@
                                    <span class="field-validation-error" data-valmsg-for="EstimatedMoveDate" data-valmsg-replace="true"><span id="EstimatedMoveDate-error" class=""></span></span>
                                </div>
                            </div>
                        </div>
                        <div class="col-sm-10 col-md-7 col-lg-5">
                            <div class="custom-check">
                                <input id="IsConditionApply" name="IsConditionApply" type="checkbox" onclick="isPrivacyTerms();">
                                @*<label for="IsConditionApply">I've owned the car for at least 1 year * <i class="bx bx-info-circle text-primary"></i></label>*@
                                <label for="IsConditionApply">
                                    @if (SessionHelper.COMPANY_ID == 1)
                                    {
                                        <a href="https://www.anglopacific.co.uk/privacy_policy.htm" target="_blank">
                                            I agree to the terms and conditions outlined in the privacy policy
                                        </a>
                                    }
                                    else if (SessionHelper.COMPANY_ID == 2)
                                    {
                                        <span>
                                            I agree to the <a href="https://www.pickfords.co.uk/terms-and-conditions" target="_blank">terms and conditions</a> outlined in the <a href="https://www.pickfords.co.uk/privacy-policy" target="_blank">privacy policy</a>
                                        </span>
                                    }
                                    else if (SessionHelper.COMPANY_ID == 3)
                                    {
                                        <span>
                                            I agree to the <a href="https://www.excess-international.com/terms-conditions/" target="_blank">terms and conditions</a> outlined in the <a href="https://www.excess-international.com/privacy-policy" target="_blank">privacy policy</a>
                                        </span>
                                    }
                                </label>
                                <p>
                                    <span class="field-validation-error" data-valmsg-for="IsConditionApply" data-valmsg-replace="true"><span id="IsConditionApply-error" class=""></span></span>
                                </p>
                            </div>
                        </div>
                    </div>


                    <div class="col-12 mt-5">
                        <div class="border-top pt-4">
                            <div class="row justify-content-between journey-btns">
                                <div class="col-sm-auto">
                                    @*<button class="btn btn-secondary btn-lg rounded-pill d-flex align-items-center justify-content-center"><span class="pl-2" style="transform: rotate(180deg);">&#x27A1;</span> Back</button>*@
                                </div>
                                @*<div class="col-sm text-center">
                                        <p class="mb-0 text-danger text-uppercase">Attention</p>
                                        <p>No option has been selected above. Plesae select one to countinue.</p>
                                    </div>*@
                                <div class="col-sm-auto">
                                    <button type="submit" class="btn btn-warning btn-lg rounded-pill d-flex align-items-center justify-content-center">Next <span class="pl-2">&#x27A1;</span></button>
                                </div>
                            </div>
                        </div>
                    </div>

                    @*</form>*@
                </div>
            </div>
        }
    </div>
</div>


<script type="text/javascript">

    $(document).ready(function (e) {
        var getUrlParameter = function getUrlParameter(sParam) {
            var sPageURL = window.location.search.substring(1),
                sURLVariables = sPageURL.split('&'),
                sParameterName,
                i;

            for (i = 0; i < sURLVariables.length; i++) {
                sParameterName = sURLVariables[i].split('=');

                if (sParameterName[0] === sParam) {
                    return sParameterName[1] === undefined ? true : decodeURIComponent(sParameterName[1]);
                }
            }
        };

        var fromCountry = getUrlParameter('source_country');
        var country = getUrlParameter('country');
        if (fromCountry != null) {
            $("Select[id='FromCountry']").val(fromCountry);
            OnToFromCountryChange();
        }
        if (country != null) {
            $("Select[id='ToCountry']").val(country);
            OnToCountryCodeChange();
        }


        $('#EstimatedMoveDate').datepicker({
            format: 'dd/mm/yyyy',
            startDate: new Date()
        }).on('change', function () {
            $('.datepicker').hide();
            });

        var ToCountryCode = '@Model.ToCountry';
        var FromCountryCode = '@Model.FromCountry';
         if ($("#Id").val() != "0") {
             if (@Model.Id > 0) {
                 if (ToCountryCode == 'UK') {
                     $("#ToPostCode").show();
                     $("#MovingToCityId").hide();
                 } else {
                     OnToCountryCodeChange();
                 }
                 if (FromCountryCode == 'UK') {
                     $("#FromPostCode").show();
                     $("#FromCityDiv").hide();
                 } else {
                     OnToFromCountryChange();
                 }

                 if (FromCountryCode != null) {
                     $("#FromCountry").val(FromCountryCode.toString());
                     OnToFromCountryChange();

                     var day = '@Model.EstimatedMoveDate.Value.Day';
                     var month = '@Model.EstimatedMoveDate.Value.Month';
                     var year = '@Model.EstimatedMoveDate.Value.Year';
                     $("#EstimatedMoveDate").datepicker("setDate", new Date(year, month - 1, day));
                 }

                 if (ToCountryCode != null) {
                     $("#ToCountry").val(ToCountryCode.toString());
                     OnToCountryCodeChange();

                     var day = '@Model.EstimatedMoveDate.Value.Day';
                     var month = '@Model.EstimatedMoveDate.Value.Month';
                     var year = '@Model.EstimatedMoveDate.Value.Year';
                     $("#EstimatedMoveDate").datepicker("setDate", new Date(year, month - 1, day));
                 }
             }
        }
         else {
             if (ToCountryCode == 'UK') {
                 $("#ToPostCode").show();
                 $("#MovingToCityId").hide();
             } else {
                 OnToCountryCodeChange();
             }
             if (FromCountryCode == 'UK') {
                 $("#FromPostCode").show();
                 $("#FromCityDiv").hide();
             } else {
                 OnToFromCountryChange();
             }
        }
    })

    // Form Validation Script
    $('form').submit(function () {
        var fromCountry = $('#FromCountry').val();
        var frompostCode = $('#PostCode').val();
        var toCountry = $('#ToCountry').val();
        var topostCode = $('#ToPostalCode').val();
        var EstimatedMoveDate = $('#EstimatedMoveDate > input').val();
        var IsConditionApply = $('#IsConditionApply').val();
        var arrStartDate = EstimatedMoveDate.split("/");
        var JQEstimateDate = new Date(arrStartDate[2], arrStartDate[1], arrStartDate[0]);
        var today = new Date();
        var dd = String(today.getDate()).padStart(2, '0');
        var mm = String(today.getMonth() + 1).padStart(2, '0');
        var yyyy = today.getFullYear();
        var TodayDate = new Date(yyyy, mm, dd);
        var TitleId = $('#TitleId').val();
        var DateCompare = JQEstimateDate < TodayDate;
        if (fromCountry == "" || (fromCountry == 'UK' && frompostCode == "") || toCountry == "" || (toCountry == 'UK' && topostCode == "") || EstimatedMoveDate == "" || DateCompare == true || IsConditionApply == "on" || IsConditionApply == "false" || TitleId == "") {
            if (fromCountry == "") {
                $('#FromCountry').next().addClass('input-validation-error');
                $('#FromCountry-error').text('From Country is Required.');
            }
            if (fromCountry == 'UK' && frompostCode == "") {
                $('#PostCode').next().addClass('input-validation-error');
                $('#PostCode-error').text('Postcode is Required.');
            }
            if (toCountry == "") {
                $('#ToCountry').next().addClass('input-validation-error');
                $('#ToCountry-error').text('To Country is Required.');
            }
            if (toCountry == 'UK' && topostCode == "") {
                $('#ToPostalCode').next().addClass('input-validation-error');
                $('#ToPostCode-error').text('Postcode is Required.');
            }
            if (EstimatedMoveDate == "") {
                $('#EstimatedMoveDate').addClass('input-validation-error');
                $('#EstimatedMoveDate-error').text('Estimated Move Date is Required.');
            }
            if (DateCompare == true) {
                $('#EstimatedMoveDate').addClass('input-validation-error');
                $('#EstimatedMoveDate-error').text('Estimated Move date must be in future.');
            }
            if (IsConditionApply == "on" || IsConditionApply == "false") {
                $('#IsConditionApply-error').text('Please accept privacy terms.');
            }
            if (TitleId == "") {
                $('#TitleId').next().addClass('input-validation-error');
                $('#TitleId-error').text('Title is Required.');
            }
            return false;
        }
        if (fromCountry == toCountry) {
            $('#FromCountry').next().addClass('input-validation-error');
            $('#FromCountry-error').text('From Country must be different from To Country');
            return false;
        }

        if ($('#PostCode-error').text() != "") {
            return false;
        }
        if ($('#ToPostCode-error').text() != "") {
            return false;
        }
    });
    $('#FromCountry').change(function () {
        $('#FromCountry').next().removeClass('input-validation-error');
        $('#FromCountry-error').text('');

    });
    $('#PostCode').change(function () {
        $('#PostCode').next().removeClass('input-validation-error');
        $('#PostCode-error').text('');
    });
    $('#ToCountry').change(function () {
        $('#ToCountry').next().removeClass('input-validation-error');
        $('#ToCountry-error').text('');
    });
    $('#ToPostCode').change(function () {
        $('#ToPostalCode').next().removeClass('input-validation-error');
        $('#ToPostCode-error').text('');
    });
    $('#EstimatedMoveDate').change(function () {
        $('#EstimatedMoveDate').removeClass('input-validation-error');
        $('#EstimatedMoveDate-error').text('');
    });
    $('#IsConditionApply').change(function () {
        $('#IsConditionApply-error').text('');
    });
    $('#TitleId').change(function () {
        $('#TitleId').next().removeClass('input-validation-error');
        $('#TitleId-error').text('');
    });
    // Form Validation Script End



    function OnToFromCountryChange() {
        var countryId = $("#FromCountry").val();
        if (countryId == 'UK') {
            $('#FromCityDiv').hide();
            $('#FromPostCode').show();
        }
        else {
            $('#FromCityDiv').show();
            $('#FromPostCode').hide();
        }
         $.ajax({
             url: '@Url.Action("GetCityListByCountryId", "Baggage")',
             async: false,
             type: "POST",
             dataType: "json",
             data: { 'countryCode': countryId },
             success: function (data) {
                 var cityName = '@Model.FromCity';
                 $("#FromCity").html("");
                 var ToCountryDDL = "<select'>";
                 for (var i = 0; i < data.length; i++) {
                     if (cityName != null && data[i].CityName == cityName) {
                         ToCountryDDL = ToCountryDDL + '<option value = "' + data[i].CityName + '" Selected>' + data[i].CityName + '</option>';
                     } else {
                         ToCountryDDL = ToCountryDDL + '<option value = "' + data[i].CityName + '">' + data[i].CityName + '</option>';
                     }
                 }
                 ToCountryDDL = ToCountryDDL + '</select>';

                 //$.each(data, function (i, data) {
                 //    if (cityName != null && data.CityName == cityName) {
                 //        $("#MovingFromCityId").append('<option value="' + data.CityName + '" selected>' +
                 //            data.CityName + '</option>');
                 //    } else {
                 //        $("#MovingFromCityId").append('<option value="' + data.CityName + '">' +
                 //            data.CityName + '</option>');
                 //    }
                 //});
                 //$("#MovingFromCityId").niceSelect('update');
                 $("#FromCity").html(ToCountryDDL);
                    },
                })
    }

    $("#FromCountry").change(function () {
        OnToFromCountryChange();
    })

    $("#ToCountry").change(function () {
        OnToCountryCodeChange();
    })

    function OnToCountryCodeChange() {
        var countryId = $("#ToCountry").val();
        if (countryId == 'UK') {
            $('#MovingToCityId').hide();
            $('#ToPostCode').show();
        }
        else {
            $('#MovingToCityId').show();
            $('#ToPostCode').hide();
        }
         $.ajax({
             url: '@Url.Action("GetCityListByCountryId", "Baggage")',
             async: false,
             type: 'POST',
             dataType: "json",
             data: { 'countryCode': countryId },
             success: function (data) {
                 var cityName = '@Model.CityName';
                 $("#CityName").html("");
               //  $.each(data, function (i, data) {
               //      if (cityName != null && data.CityName == cityName) {
               //          $("#MovingToCityId").append('<option value="' + data.CityName + '" selected>' +
               //              data.CityName + '</option>');
               //      } else {
               //          $("#MovingToCityId").append('<option value="' + data.CityName + '">' +
               //              data.CityName + '</option>');
               //      }
               //  });
                 var ToCountryDDL = "<select'>";
                 for (var i = 0; i < data.length; i++) {
                     if (cityName != null && data[i].CityName == cityName) {
                         ToCountryDDL = ToCountryDDL + '<option value = "' + data[i].CityName + '" Selected>' + data[i].CityName + '</option>';
                     } else {
                         ToCountryDDL = ToCountryDDL + '<option value = "' + data[i].CityName + '">' + data[i].CityName + '</option>';
                     }
                 }
                 ToCountryDDL = ToCountryDDL + '</select>';
                 $("#CityName").html(ToCountryDDL);
                 //$("#MovingToCityId").niceSelect('update');
                    },
                })
    }

    function isPrivacyTerms() {
        var isPrivacyTerms = $('#IsConditionApply').is(":checked");
        $("#IsConditionApply").val(isPrivacyTerms);
    }

    function CheckValidPostCode(code) {
        var postCode = "";
        var fromcountry = $('#FromCountry').val();
        var tocountry = $('#ToCountry').val();
        if (code == 1) {
            if (fromcountry == 'UK')
                postCode = $("#PostCode").val();
        }
        if (code == 2) {
         if (tocountry == 'UK')
                postCode = $("#ToPostalCode").val();
        }
        if (postCode != "") {
                $.ajax({
                    url: '@Url.Action("CheckValidPostCode", "Vehicle")',
                    async: false,
                    type: 'POST',
                    data: { 'postCode': postCode },
                    success: function (data) {
                        if (data != false) {
                            $("#BranchId").val(data);
                        }
                        else {
                            if (code == 1) {
                                $('#PostCode-error').text('Please enter valid post code.');
                            }
                            else if (code == 2) {
                                $('#ToPostCode-error').text('Please enter valid post code.');
                            }
                        }

                    }
                });
        }
    }
    function isNumberKey(evt) {
        var charCode = (evt.which) ? evt.which : event.keyCode
        if (charCode > 31 && (charCode < 48 || charCode > 57))
            //if (charCode != 40 && charCode != 41) {
            return false;
        //}
        return true;
    }
</script>
