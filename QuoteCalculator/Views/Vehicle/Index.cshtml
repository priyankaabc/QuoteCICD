@using QuoteCalculator.Data
@model tbl_Vehicle

<style>
    .input-validation-error {
        border: 1px solid #f00 !important;
    }

    .field-validation-error {
        color: #f00 !important;
    }
</style>
@*<div class="page-breadcrumb text-center font-nr mb-2">
        <ul>
            <li><a href="#">Home</a></li>
            <li><a href="#">Vehicle shipping</a></li>
        </ul>
    </div>*@
<h1 class="text-primary text-center mb-4"><b>Vehicle shipping</b></h1>
@*<p><small class="text-warning">Please fill in the form below. All fields marked * are mandatory</small></p>*@
<div class="row justify-content-center">
    <div class="col-md-9 my-4">
        <ul class="progress-steps">
            <li class="active">First Step</li>
            <li>Second Step</li>
        </ul>
    </div>
    <div class="col-12">
        @using (Html.BeginForm("Index", "Vehicle", FormMethod.Post, new { @class = "custom-inputs", @id = "VehicleForm", @autocomplete = "off" }))
        {
        <div class="row">
            <div class="col-12 my-4">
                <span class="text-warning"><b>Fields marked with * are mandatory</b></span>
            </div>
            <div class="col-12">
                <div class="row">
                    @Html.HiddenFor(m => m.Id)
                    <div class="col-md-6 form-group">
                        <div class="row">
                            @Html.HiddenFor(m => m.BranchId)
                            <div class="col-auto small-fixed-input">
                                @Html.LabelFor(x => x.TitleId)
                                @*@Html.DropDownList("TitleId", new SelectList(ViewBag.TitleList, "Id", "TitleName")
                            , "", new { @id = "TitleId", @class = " "  })*@
                                @Html.DropDownListFor(x => x.TitleId, new SelectList(ViewBag.TitleList, "Id", "TitleName"), "- Select -", new { @class = "custom-selection form-control" })
                                <p>
                                    <span class="field-validation-error" data-valmsg-for="TitleId" data-valmsg-replace="true"><span id="TitleId-error" class=""></span></span>
                                </p>
                            </div>
                            <div class="col">
                                @Html.LabelFor(x => x.Firstname)
                                @Html.TextBoxFor(x => x.Firstname, new { @class = "form-control", @placeholder = "Type Here" })
                                @Html.ValidationMessageFor(m => m.Firstname)
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6 form-group">
                        @Html.LabelFor(x => x.Lastname)
                        @Html.TextBoxFor(x => x.Lastname, new { @class = "form-control", @placeholder = "Type Here" })
                        @Html.ValidationMessageFor(m => m.Lastname)
                    </div>
                    <div class="col-md-6 form-group">
                        @Html.LabelFor(x => x.Email)
                        @Html.TextBoxFor(x => x.Email, new { @class = "form-control", @placeholder = "Type Here" })
                        @Html.ValidationMessageFor(m => m.Email)
                    </div>
                    <div class="col-md-6 form-group">
                        <div class="row">
                            <div class="col-6 form-group">
                                @Html.LabelFor(x => x.CountryCode)
                                @Html.DropDownListFor(x => x.CountryCode , new SelectList(
                                                            (ViewBag.CountryCodeList as IEnumerable<tbl_CountryCode>)
                                                            .Select(
                                                                a=>new { Id =a.CountryCode, CountryCode = a.CountryName + " (" + a.CountryCode + ")"}
                                                            ),"Id","CountryCode"), new { @class = "form-control" })
                                <p>
                                    <span class="field-validation-error" data-valmsg-for="CountryCode" data-valmsg-replace="true"><span id="CountryCode-error" class=""></span></span>
                                </p>
                            </div>
                            <div class="col-6 form-group">
                                @Html.LabelFor(x => x.Telephone)
                                @Html.TextBoxFor(x => x.Telephone, new { @class = "form-control", @placeholder = "Type Here", @onkeypress = "return isNumberKey(event)", @maxlength = "20" })
                                @Html.ValidationMessageFor(m => m.Telephone)
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-12 my-4">
                <h5 class="text-success"><b>Your move</b></h5>
            </div>
            <div class="col-12">
                <div class="row">
                    <div class="col-md-6">
                        <div class="row">
                            <div class="col-12 form-group">
                                @Html.LabelFor(m => m.FromCountryName)
                                <input type="text" class="form-control valid" value="United Kingdom" aria-invalid="false" readonly="">
                                @*@Html.DropDownListFor(x => x.FromCountryId, new SelectList(ViewBag.SelectedCountryList, "Id", "CountryName"), new { @class = "custom-selection form-control" })
                            @Html.ValidationMessageFor(m => m.FromCountryId)*@
                            </div>
                            <div class="col-12 form-group">
                                @Html.LabelFor(x => x.PostCode)
                                @Html.TextBoxFor(x => x.PostCode, new { @class = "form-control", @onblur = "CheckValidPostCode()" })
                                <span class="text-danger" id="isPostCodeValid">Please enter valid post code</span>
                                <span class="field-validation-error" data-valmsg-for="PostCode" data-valmsg-replace="true"><span id="PostCode-error" class=""></span></span>

                                @*@Html.TextBoxFor(x => x.PostCode, new { @class = "form-control" })*@
                                @*@Html.ValidationMessageFor(m => m.PostCode)*@
                                @*@if (ViewBag.BranchPostCode == 0)
                            {
                                <span class="text-danger">Please enter valid Post Code</span>
                            }*@

                            </div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="row">
                            <div class="col-12 form-group">
                                <div>
                                    @Html.LabelFor(m => m.ToCountryCode)
                                    @Html.DropDownListFor(x => x.ToCountryCode, new SelectList(ViewBag.CountryList, "country_code", "country"), "- Select -", new { @class = " form-control", @placeholder = "Type Here" })
                                    @*@Html.ValidationMessageFor(m => m.ToCountryCode)*@
                                </div>
                                <span class="field-validation-error" data-valmsg-for="ToCountryCode" data-valmsg-replace="true"><span id="ToCountryCode-error" class=""></span></span>
                            </div>
                            <div class="col-12 form-group">
                                <div>
                                    @Html.LabelFor(m => m.CityName)
                                    @Html.DropDownListFor(x => x.CityName, new List<SelectListItem>(), new { @class = " form-control", @placeholder = "Type Here" })
                                    @*<select id="MovingToCityId" name="CityName" class="custom-selection form-control"></select>*@
                                </div>
                                <span class="field-validation-error" data-valmsg-for="CityName" data-valmsg-replace="true"><span id="CityName-error" class=""></span></span>
                            </div>
                            <div class="col-10 col-md-8 form-group">
                                @Html.LabelFor(x => x.EstimatedMoveDate)
                                <div class="input-group date" id='EstimatedMoveDate'>
                                    <input type="text" name="EstimatedMoveDate" class="form-control" placeholder="dd/mm/yyyy">
                                    <div class="input-group-append input-group-addon">
                                        <span class="input-group-text"><i class="bx bx-calendar-alt font-md"></i></span>
                                    </div>
                                </div>
                                @*@Html.ValidationMessageFor(m => m.EstimatedMoveDate)*@
                                <span class="d-block field-validation-error" data-valmsg-for="EstimatedMoveDate" data-valmsg-replace="true"><span id="EstimatedMoveDate-error" class=""></span></span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-12 my-4">
                <h5 class="text-success"><b>Your vehicle</b></h5>
            </div>
            <div class="col-12">
                <div class="row">
                    <div class="col-md-6">
                        <div class="row">
                            @*
                        <div class="col-12 form-group">
                            <div>
                                @Html.LabelFor(m => m.VehicleType)
                                @Html.DropDownListFor(x => x.VehicleType, new SelectList(ViewBag.VehicleTypeList, "Id", "TypeName"), new { @class = "custom-selection form-control", @placeholder = "Type Here" })
                            </div>
                            <span class="field-validation-error" data-valmsg-for="VehicleType" data-valmsg-replace="true"><span id="VehicleType-error" class=""></span></span>
                        </div>*@
                            <div class="col-12 form-group">
                                <div>
                                    @Html.LabelFor(m => m.VehicleMakeName)
                                    @Html.DropDownListFor(x => x.VehicleMakeName, new SelectList(ViewBag.VehicleMakeList, "MakeName", "MakeName"), "- Select -", new { @class = "form-control", @placeholder = "Type Here" })
                                    @*@Html.ValidationMessageFor(m => m.VehicleMakeName)*@
                                </div>
                                <span class="field-validation-error" data-valmsg-for="VehicleMakeName" data-valmsg-replace="true"><span id="VehicleMakeName-error" class=""></span></span>
                            </div>
                            <div class="col-12 form-group mt-md-4 pt-md-3">
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="row">
                            <div class="col-12 form-group">
                                <div>
                                    @Html.LabelFor(m => m.VehicleModelName)
                                    @*<select id="VehicleModelId" name="VehicleModelName" class="custom-selection form-control"></select>*@
                                    @Html.DropDownListFor(m => m.VehicleModelName, new List<SelectListItem>(), new { @class = "form-control" })
                                </div>
                                <span class="field-validation-error" data-valmsg-for="VehicleModelName" data-valmsg-replace="true"><span id="VehicleModelName-error" class=""></span></span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-12">
                <div class="row">
                    <div class="col-md-6">
                        <div class="row">
                            <div class="col-12 mt-4 form-group">
                                <div>
                                    <div class="custom-check">
                                        <h5 class="text-success"><b>Special requirements:</b></h5>
                                    </div>
                                </div>
                                <div>
                                    @Html.TextAreaFor(x => x.SpecialRequirement, new { @class = "form-control", @rows = 4, @placeholder = "If your vehicle is not present in the drop-down list or you wish to ship a motorcycle, motor home or commercial vehicle, then please advise the make and model of your vehicle here." })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="row">
                            <div class="col-12 mt-4 form-group">
                                <div>
                                    <div class="custom-check">
                                        <input type="checkbox" class="styled" name="IsOwnedCar"
                                               id="IsOwnedCar" onclick="isOwnedCar();">
                                        <label for="IsOwnedCar">
                                            I've owned the car for at least 1 year
                                            <a href="javascript:;" data-toggle="tooltip" data-placement="bottom" title="Most countries require vehicles to have been owned by the importer for a minimum of 12 months."><i class="bx bx-info-circle text-primary"></i></a>
                                        </label>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-sm-10 col-md-8 col-lg-6 mt-4">
                <div class="custom-check">
                    <input type="checkbox" name="IsConditionApply"
                           id="IsConditionApply" onclick="isPrivacyTerms();">
                    <label for="IsConditionApply">
                        <a href="https://www.anglopacific.co.uk/privacy_policy.htm" target="_blank">
                            I agree to the terms and conditions outlined in the privacy policy
                        </a>
                    </label>
                    <p>
                        <span class="field-validation-error" data-valmsg-for="IsConditionApply" data-valmsg-replace="true"><span id="IsConditionApply-error" class=""></span></span>
                    </p>
                </div>
            </div>
            @*<div class="col-12">
            <p class="mb-2"><b>Choose another option?</p>
            <ul class="option-links">
                <li><a href="#">Book a home survey</a></li>
                <li>|</li>
                <li><a href="#">Book a video survey</a></li>
                <li>|</li>
                <li><a href="#">Baggage Only</a></li>
            </ul>
        </div>*@
            <div class="col-12 mt-5">
                <div class="border-top pt-4">
                    <div class="row justify-content-between journey-btns">
                        <div class="col-sm-auto">
                            @*<button class="btn btn-secondary btn-lg rounded-pill d-flex align-items-center justify-content-center"><span class="pl-2" style="transform: rotate(180deg);">&#x27A1;</span> Back</button>*@
                        </div>
                        @*<div class="col-sm text-center">
                        <p class="mb-0 text-danger text-uppercase">Attention</p>
                        <p>No option has been selected above. Plesae select one to countinue.</p>
                    </div>*@
                        <div class="col-sm-auto">
                            <button type="submit" onsubmit="testing();" class="btn btn-warning btn-lg rounded-pill d-flex align-items-center justify-content-center">Next <span class="pl-2">&#x27A1;</span></button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        }
    </div>
</div>

<script>
    $(function () {
        $('[data-toggle="tooltip"]').tooltip();
    })
    $(document).ready(function (e) {
        var getUrlParameter = function getUrlParameter(sParam) {
        var sPageURL = window.location.search.substring(1),
            sURLVariables = sPageURL.split('&'),
            sParameterName,
            i;
        for (i = 0; i < sURLVariables.length; i++) {
            sParameterName = sURLVariables[i].split('=');

            if (sParameterName[0] === sParam) {
                return sParameterName[1] === undefined ? true : decodeURIComponent(sParameterName[1]);
            }
        }
    };
        var country = getUrlParameter('country');
        if (country != null) {
            $("Select[id='ToCountryCode']").val(country);
            OnToCountryCodeChange();
        }
        //var url = window.location.href;
        //var country = url.substring(url.lastIndexOf('?') + 1);
        //if (country != null) {
        //    var countryCode = country.split('=')[1];
        //    $("Select[id='ToCountryCode']").val(countryCode);
        //    OnToCountryCodeChange();
        //}

        $('#EstimatedMoveDate').datepicker({
            format: 'dd/mm/yyyy',
            startDate: new Date()
        }).on('change', function () {
            $('.datepicker').hide();
        });

        if ($("#Id").val() != "0") {
            if (@Model.Id > 0) {
                var countryCode = '@Model.ToCountryCode';
                if (countryCode != null) {
                    $("#ToCountryCode").val(countryCode.toString());
                    OnToCountryCodeChange();
                    OnVehicleMakeNameChange();
                    var day = '@Model.EstimatedMoveDate.Day';
                    var month = '@Model.EstimatedMoveDate.Month';
                    var year = '@Model.EstimatedMoveDate.Year';
                    $("#EstimatedMoveDate").datepicker("setDate", new Date(year, month-1, day));
                }
            }
        }
        $("#isPostCodeValid").text("");
        $("#termsAndConditions").hide();
    })

    // Validation Script
    $('form').submit(function () {
        var toCountry = $('#ToCountryCode').val();
        var VehicleType = $('#VehicleType').val();
        var VehicleMakeName = $('#VehicleMakeName').val();
        var EstimatedMoveDate = $('#EstimatedMoveDate > input').val();
        var IsConditionApply = $('#IsConditionApply').val();
        var TitleId = $('#TitleId').val();
        var date = new Date(EstimatedMoveDate.split("/").reverse().join("-"));
        var isValidEstimtedDate = false;
        if (new Date(date.setHours(00, 00, 00, 00)) < new Date().setHours(00, 00, 00, 00)) {
            isValidEstimtedDate = true;
        }
        if (toCountry == "" || VehicleType == "" || VehicleMakeName == "" || EstimatedMoveDate == "" || IsConditionApply == "on" || IsConditionApply == "false" || TitleId == "" || isValidEstimtedDate == true) {
            if (toCountry == "") {
                $('#ToCountryCode').next().addClass('input-validation-error');
                $('#ToCountryCode-error').text('To Country is Required.');
            }
            if (VehicleType == "") {
                $('#VehicleType').next().addClass('input-validation-error');
                $('#VehicleType-error').text('Vehicle Type is Required.');
            }
            if (VehicleMakeName == "") {
                $('#VehicleMakeName').next().addClass('input-validation-error');
                $('#VehicleMakeName-error').text('Vehicle make is Required.');
            }
            if (EstimatedMoveDate == "") {
                $('#EstimatedMoveDate').addClass('input-validation-error');
                $('#EstimatedMoveDate-error').text('Estimated move date is Required.');
            }
            if (isValidEstimtedDate == true) {
                $('#EstimatedMoveDate').addClass('input-validation-error');
                $('#EstimatedMoveDate-error').text('Estimated Move date must be in future.');
            }
            if (IsConditionApply == "on" || IsConditionApply == "false") {
                $('#IsConditionApply-error').text('Please accept privacy terms.');
            }
            if (TitleId == "") {
                $('#TitleId').next().addClass('input-validation-error');
                $('#TitleId-error').text('Title is Required.');
            }
            return false;
        }
        if ($("#isPostCodeValid").text() != "") {
            return false;
        }

        if ($("#IsConditionApply").val() != "true") {
            $("#termsAndConditions").show();
            return false;
        }
    });

    $('#ToCountryCode').change(function () {
        $('#ToCountryCode').next().removeClass('input-validation-error');
        $('#ToCountryCode-error').text('');
    });
    //$('#CityName').change(function () {
    //    $('#MovingToCityId').next().removeClass('input-validation-error');
    //    $('#CityName-error').text('');
    //});
    $('#VehicleType').change(function () {
        $('#VehicleType').next().removeClass('input-validation-error');
        $('#VehicleType-error').text('');
    });
    $('#VehicleMakeName').change(function () {
        $('#VehicleMakeName').next().removeClass('input-validation-error');
        $('#VehicleMakeName-error').text('');
    });
    $('#EstimatedMoveDate').change(function () {
        $('#EstimatedMoveDate').removeClass('input-validation-error');
        $('#EstimatedMoveDate-error').text('');
    });
    $('#IsConditionApply').change(function () {
        $('#IsConditionApply-error').text('');
    });
    $('#TitleId').change(function () {
        $('#TitleId').next().removeClass('input-validation-error');
        $('#TitleId-error').text('');
    });

    // Validation Script End

    function isOwnedCar() {
        var isOwnedCar = $('#IsOwnedCar').is(":checked");
        $("#IsOwnedCar").val(isOwnedCar);
    }
    //function isPrivacyTerms() {
    //    var isPrivacyTerms = $('#IsConditionApply').is(":checked");
    //    $("#IsConditionApply").val(isPrivacyTerms);
    //    if ($("#IsConditionApply").val() == "true") {
    //        $("#termsAndConditions").hide();
    //    } else {
    //        $("#termsAndConditions").show();
    //        return false;
    //    }
    //}
    function isPrivacyTerms() {
        var isPrivacyTerms = $('#IsConditionApply').is(":checked");
        $("#IsConditionApply").val(isPrivacyTerms);
    }

    function CheckValidPostCode() {
        var postCode = $("#PostCode").val();
        if (postCode == "") {
            $("#isPostCodeValid").text("");
        }
        $.ajax({
            url: '@Url.Action("CheckValidPostCode", "Vehicle")',
            async: false,
            type: 'POST',
            data: { 'postCode': postCode },
            success: function (data) {
                if (data != false) {
                    $("#BranchId").val(data);
                    $("#isPostCodeValid").text("");
                }
                else { $("#isPostCodeValid").text("Please enter valid post code"); }
            }
        });
    }
    $("#VehicleMakeName").change(function () {
        OnVehicleMakeNameChange();

    })
    $("#ToCountryCode").change(function () {
        OnToCountryCodeChange();
    })

    function OnVehicleMakeNameChange() {
        var vehicleMake = $("#VehicleMakeName").val();
        $.ajax({
            url: '@Url.Action("GetVehicleModelList", "Vehicle")',
            async: false,
            type: 'POST',
            data: { 'MakeName': vehicleMake },
            success: function (data) {
                var modelName = '@Model.VehicleModelName';
                $("#VehicleModelName").html("");
                var makeNameyDDL = "<select'>";
                for (var i = 0; i < data.length; i++) {
                    if (modelName != null && data[i].ModelName == modelName) {
                        makeNameyDDL = makeNameyDDL + '<option value = "' + data[i].ModelName + '" Selected>' + data[i].ModelName + '</option>';

                    } else {
                        makeNameyDDL = makeNameyDDL + '<option value = "' + data[i].ModelName + '">' + data[i].ModelName + '</option>';
                    }
                }
                makeNameyDDL = makeNameyDDL + '</select>';
                $("#VehicleModelName").html(makeNameyDDL);

                //$.each(data, function (i, data) {
                //    if (modelName != null && data.ModelName == modelName) {
                //        $("#VehicleModelName").append('<option value="' + data.ModelName + '" selected>' +
                //            data.ModelName + '</option>');
                //    }
                //    else {
                //        $("#VehicleModelName").append('<option value="' + data.ModelName + '">' +
                //            data.ModelName + '</option>');
                //    }
                //});
                //$("#VehicleModelName").niceSelect('update');
            }
        })
    }

    function OnToCountryCodeChange() {
        var countryId = $("#ToCountryCode").val();
        //if (countryId == "") { countryId =0 }
         $.ajax({
             url: '@Url.Action("GetCityListByCountryId", "Vehicle")',
             async: false,
             type: 'POST',
             data: { 'countryCode': countryId },
             success: function (data) {                 
                 var cityName = '@Model.CityName';
                 $("#MovingToCityId").html(""); 
                 //$.each(data, function (i, data) {
                 var ToCountryDDL = "<select'>";
                 for (var i = 0; i < data.length; i++) {
                     if (cityName != null && data[i].CityName == cityName) {
                         ToCountryDDL = ToCountryDDL + '<option value = "' + data[i].CityName + '" Selected>' + data[i].CityName + '</option>';

                     } else {
                         ToCountryDDL = ToCountryDDL + '<option value = "' + data[i].CityName + '">' + data[i].CityName + '</option>';
                     }
                 }
                 ToCountryDDL = ToCountryDDL + '</select>';
                     //if (cityName != null && data.CityName == cityName) {
                     //    $("#MovingToCityId").append('<option value="' + data.CityName + '" selected>' +
                     //        data.CityName + '</option>');
                     //
                     //
                     //    //test = test + '<option value="' + data.CityName + '" selected>' + data.CityName + '</option>';
                     //} else {
                     //    $("#MovingToCityId").append('<option value="' + data.CityName + '">' +
                     //        data.CityName + '</option>');
                     //
                     //    //test = test+  '<option value = "' + data.CityName + '" > ' +    data.CityName + '</option >';
                     //}
                 //});
                 $("#CityName").html(ToCountryDDL);
                     //$("#MovingToCityId").niceSelect('update');
             },
                })
    }

    function isNumberKey(evt) {
        var charCode = (evt.which) ? evt.which : event.keyCode
        if (charCode > 31 && (charCode < 48 || charCode > 57))
            //if (charCode != 40 && charCode != 41) {
                return false;
            //}
        return true;
    }
</script>
